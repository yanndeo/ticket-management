var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddCvDTO.html",[0,0.166,1,2.397]],["body/classes/AddCvDTO.html",[0,0.26,1,3.303,2,1.021,3,0.163,4,0.143,5,0.143,6,6.056,7,4.215,8,2.889,9,0.345,10,1.392,11,3.758,12,4.078,13,3.491,14,4.478,15,3.063,16,1.659,17,4.078,18,0.905,19,0.018,20,1.739,21,1.631,22,3.761,23,0.825,24,3.761,25,1.702,26,3.338,27,3.761,28,2.868,29,3.761,30,3.937,31,3.236,32,3.761,33,3.069,34,3.761,35,3.761,36,3.761,37,0.319,38,1.665,39,2.105,40,4.409,41,3.666,42,4.409,43,3.289,44,3.161,45,3.236,46,3.236,47,1.579,48,0.163,49,3.236,50,3.236,51,0.009,52,0.012,53,0.009]],["title/controllers/AppController.html",[54,1.219,55,2.601]],["body/controllers/AppController.html",[0,0.218,3,0.212,4,0.185,5,0.185,9,0.652,19,0.018,21,1.151,23,0.583,25,1.432,37,0.361,48,0.212,51,0.012,52,0.014,53,0.012,54,1.992,55,4.249,56,1.679,57,4.2,58,1.65,59,4.882,60,1.326,61,2.732,62,2.417,63,3.415,64,2.732,65,0.903,66,3.961,67,4.2,68,5.69,69,3.415,70,2.417,71,3.007,72,3.4,73,4.882,74,4.882,75,1.389,76,4.882,77,4.2]],["title/modules/AppModule.html",[78,1.219,79,2.601]],["body/modules/AppModule.html",[0,0.14,3,0.135,4,0.118,5,0.118,16,0.889,17,2.185,18,0.57,19,0.018,23,0.373,37,0.398,48,0.135,51,0.007,52,0.011,53,0.007,55,3.689,56,1.548,58,0.848,60,0.848,65,0.578,66,3.814,67,2.687,69,2.185,78,1.729,79,5.214,80,1.383,81,1.383,82,1.546,83,1.546,84,1.383,85,2.611,86,1.546,87,2.687,88,2.687,89,2.687,90,4.106,91,4.106,92,4.106,93,4.106,94,4.106,95,4.106,96,2.979,97,2.227,98,1.546,99,1.546,100,3.124,101,2.518,102,3.124,103,4.5,104,5.77,105,3.124,106,1.024,107,1.024,108,4.5,109,4.5,110,3.124,111,3.124,112,3.124,113,3.124,114,2.185,115,3.124,116,2.4,117,3.124,118,1.748,119,1.185,120,3.124,121,3.124,122,3.124,123,3.124,124,3.124,125,3.124,126,3.147,127,2.4,128,3.124,129,3.124,130,2.227,131,3.124,132,2.687,133,3.124,134,3.124,135,3.124,136,3.124,137,1.748,138,3.124,139,2.013,140,3.124,141,2.185,142,3.124,143,2.687,144,3.124,145,3.124,146,3.124,147,3.124,148,3.124,149,2.4,150,3.124,151,2.4,152,3.147,153,3.147,154,2.695,155,3.147,156,3.147,157,3.124,158,4.5,159,2.687,160,3.124,161,3.124,162,3.124]],["title/injectables/AppService.html",[66,2.227,163,0.836]],["body/injectables/AppService.html",[0,0.239,3,0.232,4,0.203,5,0.203,9,0.49,19,0.018,23,0.638,25,1.515,37,0.292,48,0.232,51,0.013,52,0.015,53,0.013,58,1.744,60,1.452,65,0.989,66,3.847,75,1.522,77,4.601,163,1.444,164,2.133,165,4.601,166,7.142,167,5.349,168,5.349]],["title/controllers/AuthController.html",[54,1.219,169,2.601]],["body/controllers/AuthController.html",[0,0.19,3,0.184,4,0.161,5,0.161,9,0.39,16,1.583,18,0.705,19,0.018,21,1.312,23,0.664,37,0.373,48,0.184,51,0.01,52,0.013,53,0.01,54,1.395,56,1.463,58,1.511,60,1.511,61,2.381,64,2.381,65,0.787,72,2.381,75,1.583,106,1.824,107,1.824,169,3.892,170,3.66,171,2.548,172,4.255,173,2.656,174,4.787,175,4.787,176,4.255,177,4.239,178,5.565,179,4.255,180,3.076,181,2.623,182,4.255,183,3.939,184,5.565,185,4.255,186,3.66,187,3.471,188,3.268,189,1.269,190,1.697,191,3.66,192,4.255,193,2.548,194,4.255,195,2.22,196,4.255,197,4.255,198,4.255]],["title/modules/AuthModule.html",[78,1.219,90,2.397]],["body/modules/AuthModule.html",[0,0.175,3,0.17,4,0.149,5,0.149,19,0.018,37,0.398,48,0.17,51,0.009,52,0.012,53,0.009,56,1.814,65,0.726,78,1.953,80,1.738,81,1.738,82,1.943,83,1.943,84,1.738,85,2.949,86,2.949,90,4.766,96,3.201,97,2.611,98,1.943,99,1.943,101,2.952,118,2.197,119,1.489,126,3.69,127,3.015,169,4.167,187,4.139,188,3.015,189,1.171,190,1.566,199,3.377,200,3.925,201,3.377,202,3.377,203,4.766,204,3.925,205,3.925,206,3.015,207,3.925,208,2.745,209,2.53,210,3.925,211,3.925,212,3.377,213,3.925,214,3.925,215,2.745,216,3.925,217,3.925,218,3.925,219,3.925,220,3.925,221,3.925]],["title/injectables/AuthService.html",[163,0.836,187,2.081]],["body/injectables/AuthService.html",[0,0.108,3,0.104,4,0.091,5,0.091,9,0.221,10,0.654,16,1.559,18,0.694,19,0.019,23,0.654,25,1.066,37,0.356,48,0.104,51,0.012,52,0.009,53,0.006,58,1.007,60,1.378,62,1.835,65,0.446,70,1.835,71,1.835,75,1.647,106,1.796,107,1.796,119,0.914,137,3.067,139,4.011,141,2.593,163,0.834,164,0.961,173,2.553,174,3.888,175,3.888,177,3.271,181,2.482,183,3.039,186,2.073,187,2.075,189,0.719,190,0.961,191,2.073,195,2.599,206,1.851,215,4.047,222,2.073,223,3.708,224,3.708,225,2.409,226,5.787,227,2.984,228,2.409,229,3.708,230,3.271,231,2.409,232,3.19,233,3.708,234,2.409,235,3.708,236,3.708,237,2.409,238,2.073,239,3.708,240,2.409,241,2.21,242,3.19,243,2.409,244,2.409,245,3.708,246,1.443,247,1.348,248,0.829,249,3.19,250,2.073,251,1.685,252,2.885,253,3.708,254,3.708,255,3.708,256,3.271,257,2.073,258,2.073,259,2.073,260,1.851,261,4.52,262,5.075,263,3.19,264,2.409,265,1.851,266,2.409,267,2.073,268,2.409,269,2.409,270,2.409,271,0.87,272,2.562,273,2.075,274,2.409,275,3.708,276,2.409,277,2.409,278,2.073,279,2.409,280,2.409,281,2.409,282,2.409,283,3.281,284,2.409,285,2.409,286,2.073,287,2.409,288,1.413,289,1.851,290,2.409,291,2.375,292,2.409,293,4.52,294,2.409,295,1.851,296,3.708,297,3.708,298,2.409,299,4.52,300,2.409,301,2.409,302,2.409,303,2.593,304,2.409,305,2.409,306,2.409,307,2.409]],["title/injectables/CinGeneratorService.html",[163,0.836,308,2.227]],["body/injectables/CinGeneratorService.html",[0,0.228,3,0.222,4,0.194,5,0.194,9,0.468,19,0.018,23,0.61,37,0.279,48,0.222,51,0.012,52,0.015,53,0.012,58,1.697,60,1.388,65,0.946,75,1.455,163,1.405,164,2.039,173,2.561,180,2.923,252,2.767,272,2.264,308,3.743,309,5.377,310,4.372,311,4.398,312,7.034,313,5.113,314,5.113,315,3.062,316,5.113]],["title/controllers/ClientController.html",[54,1.219,317,2.601]],["body/controllers/ClientController.html",[0,0.125,3,0.121,4,0.106,5,0.106,9,0.256,16,1.664,18,0.741,19,0.018,20,2.074,21,1.444,23,0.731,37,0.356,48,0.121,51,0.007,52,0.01,53,0.007,54,0.916,56,0.961,58,1.126,60,1.663,61,2.769,62,1.384,64,2.769,65,0.517,72,1.565,75,1.743,106,1.917,107,1.917,171,1.674,173,2.762,181,2.443,189,2.096,190,1.115,193,1.674,195,2.443,241,2.308,271,1.786,288,2.036,317,2.902,318,2.405,319,1.802,320,2.559,321,2.054,322,3.8,323,2.599,324,1.876,325,2.796,326,3.428,327,2.796,328,2.796,329,1.469,330,3.187,331,2.796,332,2.405,333,3.569,334,2.796,335,1.674,336,2.902,337,2.796,338,1.469,339,3.645,340,3.187,341,2.796,342,1.384,343,1.955,344,4.089,345,1.955,346,1.565,347,1.674,348,1.955,349,2.147,350,2.962,351,2.405,352,1.469,353,2.674,354,1.307,355,1.384,356,1.955,357,1.955,358,2.796,359,3.828,360,2.796,361,3.46,362,2.796,363,1.955,364,2.796,365,3.8,366,2.796,367,2.796,368,2.796]],["title/classes/ClientEntity.html",[0,0.166,355,1.841]],["body/classes/ClientEntity.html",[0,0.128,2,0.779,3,0.124,4,0.109,5,0.109,9,0.263,10,1.148,18,0.91,19,0.018,20,0.856,21,1.665,23,0.843,25,1.68,37,0.303,48,0.124,51,0.007,52,0.01,53,0.007,130,3.666,248,0.987,273,1.606,288,1.322,315,3.008,323,1.508,324,1.088,355,2.094,369,2.469,370,1.978,371,3.579,372,3.514,373,3.859,374,3.008,375,3.859,376,3.859,377,3.859,378,3.859,379,3.859,380,4.321,381,2.726,382,2.726,383,2.726,384,1.85,385,3.249,386,2.958,387,4.045,388,2.926,389,2.87,390,2.913,391,3.639,392,3.238,393,3.859,394,3.249,395,2.87,396,2.726,397,3.249,398,2.87,399,5.544,400,4.769,401,2.87,402,2.533,403,2.87,404,3.639,405,2.87,406,2.87,407,2.87,408,3.32,409,2.87,410,1.85,411,3.877,412,2.007,413,1.85,414,2.007,415,1.606,416,2.007,417,1.85,418,2.007,419,3.703,420,3.859,421,2.007,422,2.87,423,2.469,424,2.87,425,1.718,426,2.469,427,2.469,428,2.469,429,2.007,430,2.87]],["title/modules/ClientModule.html",[78,1.219,91,2.397]],["body/modules/ClientModule.html",[0,0.191,3,0.185,4,0.162,5,0.162,19,0.018,37,0.4,48,0.185,51,0.01,52,0.013,53,0.01,56,1.921,65,0.791,78,2.038,80,1.894,81,1.894,82,2.117,83,2.117,84,1.894,85,3.077,86,2.117,91,4.763,96,3.279,97,2.764,98,2.117,99,2.117,101,3.125,118,2.394,119,1.622,209,2.757,317,4.348,350,4.199,351,3.679,355,2.117,356,2.992,390,2.934,431,3.679,432,3.679,433,4.277,434,4.199,435,4.277,436,4.348,437,4.277,438,4.277,439,2.992,440,3.679,441,4.277]],["title/injectables/ClientService.html",[163,0.836,350,2.227]],["body/injectables/ClientService.html",[0,0.101,3,0.098,4,0.085,5,0.085,9,0.206,16,1.602,18,0.713,19,0.019,20,1.975,23,0.702,37,0.321,48,0.098,51,0.005,52,0.008,53,0.005,58,0.955,60,1.528,62,1.742,65,0.417,70,1.742,71,1.115,75,1.602,106,1.846,107,1.846,119,0.854,163,0.791,164,0.898,173,2.669,180,2.632,181,2.245,189,2.002,190,0.898,195,2.427,241,2.184,246,1.349,247,2.74,248,0.775,252,2.351,271,1.767,272,2.694,283,3.644,288,2.146,319,4.535,320,2.289,321,1.742,324,1.857,326,2.74,329,1.849,338,1.849,339,2.972,342,3.096,350,2.107,352,1.183,353,2.268,354,1.053,355,1.115,356,1.575,359,3.937,361,3.937,442,1.937,443,4.211,444,3.027,445,2.252,446,2.252,447,3.027,448,2.461,449,2.252,450,2.252,451,3.519,452,2.252,453,2.461,454,3.027,455,2.252,456,3.519,457,3.027,458,2.252,459,3.027,460,2.252,461,3.715,462,3.423,463,1.26,464,1.73,465,1.937,466,3.155,467,3.155,468,3.76,469,2.252,470,3.519,471,2.252,472,1.73,473,1.73,474,3.027,475,2.252,476,2.252,477,2.252,478,2.252,479,2.252,480,2.252]],["title/controllers/ContactController.html",[54,1.219,436,2.601]],["body/controllers/ContactController.html",[0,0.113,3,0.11,4,0.096,5,0.096,9,0.232,16,1.679,18,0.747,19,0.018,20,2.219,21,1.446,23,0.732,37,0.361,48,0.11,51,0.006,52,0.009,53,0.006,54,1.262,56,0.87,58,1.045,60,1.665,61,1.416,62,1.252,63,1.769,64,2.607,65,0.468,72,1.416,75,1.745,106,1.934,107,1.934,173,2.763,181,2.775,189,1.829,190,1.009,193,1.515,195,2.353,241,2.098,271,1.682,288,1.203,320,2.434,321,1.905,323,2.447,324,1.767,326,1.416,329,1.329,339,1.416,342,1.252,343,1.769,344,4.618,346,1.416,347,1.515,348,1.769,349,1.943,352,2.022,353,2.48,354,1.8,357,1.769,363,1.769,390,1.329,434,2.789,436,2.692,439,1.769,440,2.176,481,2.176,482,4.658,483,4.658,484,2.53,485,3.784,486,3.849,487,2.53,488,5.774,489,3.849,490,2.53,491,3.849,492,2.53,493,2.53,494,3.849,495,2.53,496,2.53,497,5.854,498,3.849,499,2.53,500,2.176,501,3.849,502,2.53,503,2.176,504,4.073,505,3.849,506,2.53,507,2.956,508,2.53,509,2.53,510,5.601,511,2.53,512,2.53,513,4.658,514,2.53,515,2.53,516,2.53]],["title/classes/ContactEntity.html",[0,0.166,390,1.954]],["body/classes/ContactEntity.html",[0,0.166,2,1.012,3,0.162,4,0.141,5,0.141,9,0.341,10,1.383,15,3.049,18,0.903,19,0.018,20,1.519,21,1.627,23,0.823,25,1.699,37,0.278,48,0.162,51,0.009,52,0.012,53,0.009,130,3.087,248,1.282,273,2.086,288,1.814,291,3.049,319,4.019,355,3.087,387,3.987,388,3.477,390,2.676,392,2.402,396,3.283,397,3.912,402,3.474,404,4.381,415,3.247,419,4.036,425,3.05,517,3.206,518,3.74,519,3.74,520,4.058,521,2.863,522,3.727,523,3.727,524,3.727,525,3.727,526,3.727,527,4.381,528,3.05,529,5.093,530,3.727,531,3.727,532,3.562,533,3.727,534,3.727,535,3.727]],["title/injectables/ContactService.html",[163,0.836,434,2.227]],["body/injectables/ContactService.html",[0,0.076,3,0.074,4,0.064,5,0.064,9,0.156,15,1.885,16,1.493,18,0.665,19,0.019,20,2.107,23,0.655,37,0.32,48,0.074,51,0.004,52,0.007,53,0.004,58,0.763,60,1.425,65,0.315,70,1.39,71,1.775,75,1.493,106,1.721,107,1.721,119,0.645,141,1.965,152,1.965,153,1.965,154,1.682,155,1.965,156,1.965,163,0.632,164,0.679,173,2.59,180,2.659,189,1.565,190,0.679,195,2.396,227,2.598,241,1.715,246,1.019,247,2.937,248,0.585,251,1.19,252,2.594,256,1.81,267,2.416,271,1.014,272,2.429,283,3.285,288,2.209,291,1.885,303,1.965,319,4.533,320,1.947,321,1.39,323,1.476,324,1.882,329,1.476,339,0.952,342,3.094,352,0.894,353,1.097,354,1.313,355,0.842,356,1.19,372,3.671,373,4.214,374,1.019,390,0.894,426,5.875,427,1.464,434,1.682,439,1.19,447,3.086,453,1.965,461,2.912,462,1.81,463,0.952,465,1.464,466,1.097,467,1.097,468,1.307,472,1.307,473,2.158,474,2.416,485,2.493,488,5.278,497,5.611,500,2.416,503,2.416,504,2.683,507,2.158,518,2.312,519,2.312,520,2.509,536,1.464,537,2.809,538,2.809,539,1.702,540,1.702,541,2.809,542,2.809,543,1.702,544,2.416,545,1.702,546,2.809,547,2.809,548,1.702,549,3.582,550,4.163,551,2.809,552,1.702,553,2.809,554,2.809,555,2.809,556,2.416,557,2.809,558,2.809,559,2.809,560,2.809,561,1.702,562,1.702,563,1.702,564,2.809,565,1.702,566,1.702,567,4.163,568,4.163,569,1.702,570,1.702,571,1.464,572,2.809,573,2.809,574,1.702,575,2.809,576,1.702,577,3.587,578,3.086,579,3.587,580,3.587,581,3.587,582,3.587,583,2.809,584,1.702,585,2.809,586,1.702,587,1.702,588,1.702,589,1.702,590,1.702]],["title/classes/CreateClientDto.html",[0,0.166,326,2.081]],["body/classes/CreateClientDto.html",[0,0.237,2,1.076,3,0.172,4,0.15,5,0.15,9,0.363,10,1.442,18,0.888,19,0.018,21,1.653,23,0.836,25,1.766,26,3.332,28,3.58,33,3.18,37,0.29,38,1.755,41,3.351,43,3.504,44,3.278,47,1.664,48,0.172,51,0.009,52,0.013,53,0.009,326,2.972,372,4.188,374,3.586,375,4.6,376,4.6,377,4.6,378,4.6,379,4.6,591,5.473,592,3.045,593,3.964,594,3.964,595,3.964,596,3.964,597,3.964,598,3.964,599,3.964,600,3.964,601,5.31,602,3.41]],["title/classes/CreateContactDto.html",[0,0.166,485,2.227]],["body/classes/CreateContactDto.html",[0,0.25,2,1.167,3,0.186,4,0.163,5,0.163,9,0.394,10,1.521,15,3.275,18,0.868,19,0.018,21,1.615,23,0.817,25,1.744,26,3.284,28,2.406,33,3.733,37,0.306,38,1.904,41,3.696,43,3.275,44,3.203,47,1.805,48,0.186,51,0.01,52,0.013,53,0.01,291,3.275,485,3.355,518,4.017,519,4.017,520,4.36,591,5.395,603,3.303,604,4.3,605,3.699,606,4.3,607,4.3,608,4.3,609,4.3,610,3.919]],["title/classes/CreateProfileDto.html",[0,0.166,611,2.227]],["body/classes/CreateProfileDto.html",[0,0.239,2,1.09,3,0.174,4,0.152,5,0.152,9,0.368,10,1.454,13,3.608,18,0.891,19,0.018,21,1.658,23,0.839,25,1.769,26,3.131,33,2.403,37,0.293,38,1.776,41,3.372,43,3.518,44,3.341,47,1.685,48,0.174,51,0.01,52,0.013,53,0.01,611,3.206,612,6.146,613,3.082,614,4.628,615,4.628,616,4.628,617,4.628,618,4.628,619,4.628,620,3.452,621,4.013,622,4.013,623,5.183,624,3.452,625,4.013,626,4.013,627,4.013,628,4.013,629,4.013,630,4.013]],["title/classes/CreateTicketDto.html",[0,0.166,631,2.227]],["body/classes/CreateTicketDto.html",[0,0.259,2,1.577,3,0.252,4,0.22,5,0.22,19,0.017,48,0.252,51,0.014,52,0.016,53,0.014,631,4.039,632,4.997,633,4.462]],["title/controllers/CurriculumController.html",[54,1.219,634,2.601]],["body/controllers/CurriculumController.html",[0,0.096,1,3.083,3,0.094,4,0.082,5,0.082,7,2.039,9,0.386,11,1.392,16,1.707,18,0.76,19,0.018,20,2.03,21,1.455,23,0.737,37,0.328,48,0.094,51,0.005,52,0.008,53,0.005,54,0.708,56,0.743,58,0.924,60,1.676,61,1.905,62,2.368,64,2.677,65,0.399,72,1.208,75,1.865,106,1.967,107,1.967,149,1.659,152,2.381,153,2.381,154,2.039,155,2.381,156,2.381,171,1.293,173,2.77,180,2.886,181,2.74,189,2.134,190,0.861,193,1.293,195,2.571,241,2.327,248,0.743,252,0.956,271,1.522,288,2.015,322,3.237,323,2.214,324,1.814,330,1.659,332,1.857,333,1.857,335,1.293,336,1.51,338,1.134,340,1.659,342,1.685,343,1.51,344,3.868,345,2.381,346,1.208,347,1.293,348,1.51,354,1.01,357,4.195,365,3.999,448,1.51,453,2.948,463,1.208,466,1.392,467,1.392,634,2.381,635,1.857,636,1.659,637,4.783,638,2.929,639,1.857,640,2.159,641,2.159,642,2.159,643,2.159,644,2.159,645,2.159,646,2.159,647,2.159,648,2.159,649,2.159,650,2.159,651,2.159,652,2.159,653,2.159,654,3.404,655,2.159,656,3.564,657,1.857,658,2.159,659,2.159,660,2.159,661,2.159,662,1.659,663,1.659,664,2.524,665,1.857,666,1.857,667,2.929,668,1.134,669,1.51,670,2.159,671,1.659,672,2.159,673,2.159,674,2.159,675,2.159,676,2.159,677,1.857,678,1.857,679,1.857,680,2.159,681,2.929,682,2.159,683,2.159,684,2.159,685,2.159,686,2.159,687,2.159,688,2.159,689,2.159,690,2.159,691,1.857,692,2.159,693,2.159,694,2.159,695,2.159,696,2.159]],["title/classes/CurriculumEntity.html",[0,0.166,668,1.954]],["body/classes/CurriculumEntity.html",[0,0.136,2,0.829,3,0.132,4,0.116,5,0.116,9,0.28,10,1.202,11,3.356,12,3.641,13,3.118,14,3.999,15,2.735,16,1.481,17,3.641,18,0.905,19,0.018,20,1.808,21,1.684,23,0.859,25,1.63,30,3.4,37,0.284,48,0.132,51,0.007,52,0.01,53,0.007,58,1.202,60,0.829,130,3.536,189,1.703,241,1.785,248,1.05,273,1.709,288,1.384,315,3.118,324,1.158,370,2.07,371,3.649,381,2.853,382,2.853,383,2.853,384,1.968,386,2.136,387,3.195,388,1.511,392,2.853,393,3.4,394,3.4,402,2.65,410,1.968,411,3.993,412,2.136,413,1.968,414,2.136,415,1.709,416,2.136,417,1.968,418,2.136,419,4.139,421,2.136,425,1.828,521,2.346,528,1.828,532,3.096,668,2.326,697,2.627,698,5.206,699,5.709,700,3.053,701,3.053,702,3.053,703,3.053,704,3.053,705,3.053,706,3.053,707,3.053,708,3.807,709,3.053,710,3.053,711,3.053,712,5.206,713,3.053,714,2.627,715,3.053,716,3.053,717,3.053,718,2.627,719,3.053,720,2.346,721,3.053,722,3.053]],["title/modules/CurriculumModule.html",[78,1.219,92,2.397]],["body/modules/CurriculumModule.html",[0,0.203,3,0.197,4,0.172,5,0.172,19,0.018,37,0.396,48,0.197,51,0.011,52,0.014,53,0.011,56,1.996,65,0.84,78,2.097,80,2.01,81,2.01,82,2.248,83,2.248,84,2.01,85,3.166,86,2.248,92,4.727,96,3.332,97,2.873,98,2.248,99,2.248,101,3.248,118,2.541,119,1.722,209,2.926,634,4.474,664,4.267,665,3.906,668,2.386,669,3.176,723,3.906,724,4.541,725,3.906,726,4.541,727,4.541,728,4.059,729,4.541,730,4.541]],["title/injectables/CurriculumService.html",[163,0.836,664,2.227]],["body/injectables/CurriculumService.html",[0,0.082,1,3.089,3,0.079,4,0.069,5,0.069,7,3.245,9,0.168,10,0.81,11,1.181,15,0.963,16,1.662,18,0.74,19,0.018,20,1.956,23,0.748,37,0.309,48,0.079,51,0.004,52,0.007,53,0.004,58,0.81,60,1.631,62,2.372,65,0.339,70,1.477,71,1.477,75,1.749,106,1.915,107,1.915,119,0.695,141,2.088,143,3.248,152,2.641,153,2.641,154,2.261,155,2.641,156,2.641,163,0.671,164,0.731,173,2.749,180,2.036,181,2.722,189,1.979,190,0.731,195,2.742,227,2.682,241,2.234,246,1.097,247,2.436,248,0.63,251,1.282,252,2.501,256,2.806,265,1.408,271,1.078,272,2.399,283,3.077,288,1.96,289,1.408,295,2.901,320,2.036,322,1.408,323,2.518,324,1.432,335,1.787,338,1.568,342,0.907,345,1.282,354,0.857,400,1.576,443,2.568,444,2.568,454,2.568,457,2.568,459,1.576,461,2.088,462,2.806,464,1.408,473,1.408,528,1.097,544,2.568,556,1.576,578,1.576,636,4.339,638,2.568,656,4.041,664,1.787,666,1.576,667,2.568,668,0.963,669,1.282,677,1.576,678,1.576,679,1.576,681,4.421,731,1.576,732,3.776,733,2.985,734,4.353,735,1.832,736,1.832,737,2.985,738,2.985,739,1.832,740,2.985,741,1.832,742,1.832,743,2.985,744,1.832,745,2.985,746,1.832,747,1.832,748,1.832,749,1.832,750,1.832,751,2.985,752,1.832,753,1.408,754,1.832,755,1.832,756,1.832,757,1.408,758,1.832,759,2.985,760,1.832,761,1.832,762,1.832,763,1.832,764,1.832,765,1.832,766,2.985,767,1.832,768,1.576,769,2.985,770,1.832,771,1.832,772,1.832,773,1.832,774,1.832,775,1.832,776,2.985,777,1.832,778,1.832,779,1.832,780,1.832,781,1.576,782,1.832,783,1.832,784,1.832,785,1.832,786,1.832,787,1.832,788,1.832,789,1.832,790,1.832,791,1.832,792,1.832,793,2.985,794,2.985,795,1.832,796,1.832,797,1.832,798,1.832,799,2.985,800,2.985,801,2.985,802,2.985,803,1.832,804,1.832,805,1.832,806,1.832,807,1.832,808,1.832]],["title/classes/CurriculumSubscriber.html",[0,0.166,728,2.601]],["body/classes/CurriculumSubscriber.html",[0,0.182,2,1.109,3,0.177,4,0.155,5,0.155,7,3.639,9,0.374,10,1.471,16,1.541,18,0.77,19,0.018,23,0.772,37,0.332,48,0.177,51,0.01,52,0.013,53,0.01,58,1.471,60,1.471,70,2.021,71,3.008,75,1.541,106,1.776,107,1.776,151,4.161,173,2.305,181,2.16,195,1.629,248,1.404,252,1.808,308,4.145,310,2.856,668,2.846,669,2.856,728,3.788,809,3.513,810,6.078,811,7.063,812,5.416,813,6.473,814,5.416,815,6.735,816,5.416,817,5.416,818,6.473,819,4.083,820,4.083,821,4.083,822,5.416,823,4.083,824,3.513,825,4.083,826,4.083,827,4.083,828,4.083,829,5.416,830,4.083,831,4.083]],["title/injectables/FirstMiddleware.html",[114,2.601,163,0.836]],["body/injectables/FirstMiddleware.html",[0,0.221,3,0.215,4,0.188,5,0.188,9,0.454,16,1.41,18,0.628,19,0.018,23,0.591,37,0.271,48,0.215,51,0.012,52,0.015,53,0.012,58,1.665,60,1.346,65,0.917,106,1.625,107,1.625,114,4.29,149,4.711,151,3.808,154,4.167,163,1.379,164,1.977,265,3.808,714,5.729,757,3.808,832,4.264,833,6.133,834,5.729,835,4.957,836,4.264,837,6.133,838,4.957,839,4.957,840,4.957,841,4.957]],["title/modules/HelpersModule.html",[78,1.219,93,2.397]],["body/modules/HelpersModule.html",[0,0.219,3,0.213,4,0.186,5,0.186,12,3.435,19,0.018,37,0.333,48,0.213,51,0.012,52,0.014,53,0.012,65,0.909,78,2.174,80,2.174,81,2.174,82,2.431,83,2.431,84,2.174,85,3.283,86,3.283,93,4.75,97,3.019,98,2.431,99,2.431,308,4.572,310,3.435,824,4.225,842,4.225,843,4.225,844,4.225,845,4.912,846,6.098]],["title/injectables/JwtAuthGuard.html",[163,0.836,346,2.081]],["body/injectables/JwtAuthGuard.html",[0,0.248,3,0.241,4,0.21,5,0.21,19,0.018,37,0.359,48,0.241,51,0.013,52,0.016,53,0.013,65,1.027,163,1.477,164,2.214,208,3.882,346,3.676,347,3.324,370,2.595,847,4.775,848,5.55,849,5.55]],["title/injectables/JwtStrategy.html",[163,0.836,203,2.397]],["body/injectables/JwtStrategy.html",[0,0.179,3,0.174,4,0.152,5,0.152,9,0.368,16,1.523,18,0.678,19,0.018,23,0.639,37,0.384,48,0.174,51,0.01,52,0.013,53,0.01,58,1.454,60,1.09,65,0.742,68,5.926,69,2.807,70,2.65,71,2.65,75,1.523,106,1.755,107,1.755,163,1.204,164,1.6,173,2.285,181,2.135,187,3.936,188,3.082,189,1.197,190,1.6,195,1.6,203,3.451,208,2.807,215,2.807,230,4.143,232,4.605,241,2.01,242,3.452,250,3.452,252,1.776,256,2.586,257,3.452,258,3.452,259,3.452,260,3.082,272,1.776,283,2.403,370,1.876,388,1.986,462,3.451,850,3.452,851,5.354,852,4.013,853,4.013,854,5.354,855,4.013,856,4.013,857,3.452,858,4.013,859,4.013,860,4.013,861,4.013,862,4.013,863,4.013,864,4.013,865,4.013,866,4.013,867,4.013]],["title/classes/LoginCredentialsDto.html",[0,0.166,177,2.397]],["body/classes/LoginCredentialsDto.html",[0,0.297,2,1.338,3,0.214,4,0.187,5,0.187,9,0.451,10,1.659,18,0.774,19,0.018,21,1.441,23,0.729,25,1.637,26,3.106,33,2.95,37,0.363,38,2.181,41,3.717,44,2.857,47,2.566,48,0.214,51,0.012,52,0.014,53,0.012,137,3.717,139,4.281,177,3.938,610,3.446,868,4.238,869,4.927,870,4.927,871,4.927]],["title/interfaces/PayloadInterface.html",[230,2.397,872,2.601]],["body/interfaces/PayloadInterface.html",[3,0.227,4,0.199,5,0.199,9,0.48,10,1.724,18,0.865,19,0.018,25,1.79,48,0.227,51,0.012,52,0.015,53,0.012,137,3.971,230,4.092,291,3.728,303,4.963,872,3.669,873,5.245,874,4.512]],["title/controllers/ProfileController.html",[54,1.219,875,2.601]],["body/controllers/ProfileController.html",[0,0.146,3,0.142,4,0.124,5,0.124,9,0.3,16,1.541,18,0.686,19,0.018,20,1.985,21,1.39,23,0.704,37,0.372,48,0.142,51,0.008,52,0.011,53,0.008,54,1.074,56,1.127,58,1.264,60,1.601,61,2.605,62,1.621,63,2.291,64,2.605,65,0.606,72,1.833,75,1.772,106,1.775,107,1.775,171,1.961,173,2.054,180,2.177,181,2.352,189,2.029,190,1.306,193,1.961,195,1.306,241,2.277,271,1.681,288,1.947,320,2.757,321,2.304,324,2.054,329,1.721,336,2.291,338,1.721,340,2.516,342,1.621,343,2.291,344,4.124,345,2.291,346,1.833,347,1.961,348,2.291,349,2.516,352,1.721,354,1.532,357,4.356,363,2.291,365,2.516,448,2.291,611,3.531,639,2.818,657,2.818,662,2.516,663,2.516,671,2.516,875,3.256,876,2.818,877,2.291,878,3.275,879,3.275,880,3.275,881,3.275,882,3.275,883,4.385,884,3.275,885,3.242,886,2.818,887,3.576,888,1.833,889,2.516,890,3.275,891,2.818,892,3.275,893,3.275,894,3.275,895,3.275,896,3.275,897,3.275,898,2.818,899,3.275]],["title/classes/ProfileEntity.html",[0,0.166,888,2.081]],["body/classes/ProfileEntity.html",[0,0.219,2,0.959,3,0.153,4,0.134,5,0.134,9,0.323,10,1.333,13,3.378,18,0.892,19,0.018,20,1.464,21,1.635,23,0.84,25,1.747,37,0.268,39,1.977,48,0.153,51,0.008,52,0.012,53,0.008,75,1.005,130,3.432,248,1.215,273,1.977,288,1.763,384,3.929,387,3.881,388,2.429,396,2.277,402,2.939,415,3.157,419,4.152,425,3.65,519,3.636,614,4.333,615,4.333,616,4.333,617,4.333,618,4.333,619,4.333,708,4.222,888,2.747,900,3.038,901,4.908,902,4.908,903,3.532,904,3.532,905,6.63,906,3.532,907,3.532,908,3.532,909,3.532,910,3.532,911,4.222,912,3.532,913,3.532,914,3.532,915,4.222,916,3.532,917,3.532,918,3.532]],["title/modules/ProfileModule.html",[78,1.219,94,2.397]],["body/modules/ProfileModule.html",[0,0.206,3,0.2,4,0.175,5,0.175,19,0.018,37,0.391,48,0.2,51,0.011,52,0.014,53,0.011,56,2.018,65,0.854,78,2.114,80,2.044,81,2.044,82,2.286,83,2.286,84,2.044,85,3.192,86,2.286,94,4.743,96,3.347,97,2.904,98,2.286,99,2.286,101,3.283,118,2.585,119,1.752,209,2.976,875,4.51,885,4.286,886,3.973,888,2.585,889,3.548,919,3.973,920,3.973,921,4.618,922,4.618,923,4.618,924,4.618]],["title/injectables/ProfileService.html",[163,0.836,885,2.227]],["body/injectables/ProfileService.html",[0,0.121,3,0.117,4,0.102,5,0.102,9,0.248,16,1.532,18,0.682,19,0.019,20,1.87,23,0.688,37,0.352,48,0.117,51,0.006,52,0.01,53,0.006,58,1.098,60,1.461,65,0.5,70,2.002,71,2.002,75,1.64,106,1.765,107,1.765,119,1.025,159,3.48,163,0.91,164,1.078,173,2.648,180,2.932,181,2.501,189,1.923,190,1.078,195,2.501,227,3.104,241,2.221,246,1.618,247,3.012,248,0.929,251,1.89,252,2.383,256,1.742,271,1.943,272,2.146,283,2.903,288,2.016,295,2.076,320,2.517,321,2.002,324,2.186,329,2.125,335,1.618,338,1.42,342,2.994,352,1.42,354,1.264,448,2.829,453,3.765,461,2.829,462,2.607,463,1.512,466,1.742,467,1.742,611,3.223,877,4.768,883,3.469,885,2.422,887,3.108,888,1.512,889,2.076,925,2.325,926,2.702,927,2.702,928,4.045,929,2.702,930,4.045,931,2.702,932,2.702,933,2.702,934,4.045,935,2.702,936,2.702,937,2.702,938,2.702,939,2.702,940,2.702,941,4.045,942,2.702,943,2.702,944,2.702,945,2.702,946,2.702,947,2.702,948,2.702,949,2.702]],["title/classes/RegisterAuthDto.html",[0,0.166,183,2.227]],["body/classes/RegisterAuthDto.html",[0,0.289,2,1.265,3,0.202,4,0.176,5,0.176,9,0.427,10,1.602,18,0.89,19,0.018,21,1.526,23,0.772,25,1.718,26,3.182,33,2.789,37,0.354,38,2.062,39,2.607,41,3.809,44,2.758,47,1.956,48,0.202,51,0.011,52,0.014,53,0.011,137,3.623,139,4.172,183,3.532,291,3.401,610,4.126,950,4.007,951,4.658,952,4.658,953,4.658,954,4.658,955,4.658]],["title/controllers/TicketController.html",[54,1.219,956,2.601]],["body/controllers/TicketController.html",[0,0.163,3,0.159,4,0.139,5,0.139,9,0.335,16,1.761,18,0.784,19,0.018,21,1.53,23,0.774,25,1.673,37,0.338,48,0.159,51,0.009,52,0.012,53,0.009,54,1.2,56,1.259,58,1.366,60,1.761,61,3.217,62,1.811,63,2.56,64,2.815,65,0.677,72,2.048,75,1.846,106,2.029,107,2.029,171,2.191,193,2.191,271,1.816,288,2.096,320,2.894,321,2.49,323,2.643,324,1.908,329,1.923,330,3.864,335,2.191,336,3.518,338,1.923,342,1.811,352,1.923,354,1.711,363,2.56,429,2.56,631,4.014,891,3.148,898,3.148,956,3.518,957,3.148,958,3.148,959,3.66,960,3.66,961,3.66,962,3.66,963,4.508,964,5.03,965,3.66,966,3.442,967,3.148,968,3.864,969,3.66,970,3.66,971,3.66,972,3.66,973,3.66,974,3.66,975,3.66]],["title/classes/TicketEntity.html",[0,0.166,408,2.227]],["body/classes/TicketEntity.html",[0,0.168,2,0.667,3,0.107,4,0.093,5,0.093,9,0.225,10,1.022,18,0.899,19,0.018,20,1.364,21,1.646,23,0.833,25,1.646,37,0.302,39,1.375,48,0.198,51,0.006,52,0.009,53,0.006,130,3.456,189,1.81,190,0.98,241,0.768,248,0.845,272,1.666,273,1.375,288,1.728,315,2.739,319,1.583,355,2.538,370,1.76,371,3.397,374,2.739,381,2.426,382,2.426,383,2.426,384,2.949,385,4.247,386,3.866,387,3.969,388,3.456,392,3.305,393,3.939,396,2.426,397,3.939,402,2.254,408,2.254,410,1.583,411,3.586,412,1.718,413,1.583,414,1.718,415,2.87,416,1.718,417,1.583,418,1.718,419,3.844,420,1.887,421,1.718,425,3.07,472,3.514,518,2.949,521,2.891,528,3.07,532,3.2,720,1.887,915,2.113,976,1.887,977,4.575,978,3.514,979,4.575,980,4.575,981,4.575,982,4.575,983,4.575,984,2.457,985,2.457,986,2.457,987,2.457,988,2.457,989,2.457,990,2.457,991,2.457,992,2.457,993,3.764,994,2.457,995,2.457,996,2.457,997,2.113,998,3.764,999,3.764,1000,2.457,1001,3.238,1002,2.113,1003,3.238,1004,3.238,1005,3.238,1006,3.238,1007,2.113,1008,3.238,1009,3.238,1010,3.238,1011,2.457,1012,2.457,1013,2.457,1014,2.457,1015,2.457,1016,2.457,1017,2.457]],["title/modules/TicketModule.html",[78,1.219,95,2.397]],["body/modules/TicketModule.html",[0,0.206,3,0.2,4,0.175,5,0.175,19,0.018,37,0.391,48,0.2,51,0.011,52,0.014,53,0.011,56,2.018,65,0.854,78,2.114,80,2.044,81,2.044,82,2.286,83,2.286,84,2.044,85,3.192,86,2.286,95,4.743,96,3.347,97,2.904,98,2.286,99,2.286,101,3.283,118,2.585,119,1.752,209,2.976,408,2.765,956,4.51,966,4.286,967,3.973,1018,3.973,1019,4.618,1020,3.973,1021,4.618,1022,4.618,1023,4.618,1024,4.618]],["title/injectables/TicketService.html",[163,0.836,966,2.227]],["body/injectables/TicketService.html",[0,0.172,3,0.167,4,0.146,5,0.146,9,0.353,16,1.799,18,0.801,19,0.018,20,2.139,23,0.788,25,1.557,37,0.322,48,0.167,51,0.009,52,0.012,53,0.009,58,1.414,60,1.89,65,0.712,75,1.879,106,2.072,107,2.072,163,1.171,164,1.536,271,1.88,272,1.705,288,2.128,320,2.956,321,2.578,323,2.736,324,1.975,329,2.736,335,3.118,338,2.736,352,2.023,354,1.801,429,4.619,631,3.954,958,4.48,963,4.485,966,3.118,968,4,1025,3.313,1026,3.851,1027,3.851,1028,3.851,1029,3.851,1030,3.851,1031,6.604,1032,3.851,1033,3.851,1034,3.851]],["title/classes/TimestampEntity.html",[0,0.166,371,2.081]],["body/classes/TimestampEntity.html",[0,0.207,2,1.257,3,0.201,4,0.175,5,0.175,9,0.424,10,1.596,18,0.861,19,0.018,20,1.753,21,1.601,23,0.81,37,0.253,48,0.201,51,0.011,52,0.014,53,0.011,130,2.909,248,1.593,288,2.019,315,4.289,324,1.757,371,3.289,381,4.161,382,4.161,383,4.161,387,2.592,388,2.909,410,2.985,413,4.161,415,3.613,417,2.985,1035,3.984,1036,4.631,1037,4.631,1038,4.631,1039,4.631,1040,5.877,1041,5.877]],["title/classes/UpdateClientDto.html",[0,0.166,339,2.081]],["body/classes/UpdateClientDto.html",[0,0.225,2,0.996,3,0.159,4,0.139,5,0.139,9,0.336,10,1.368,18,0.887,19,0.018,21,1.65,23,0.835,25,1.747,26,3.32,28,3.634,37,0.355,38,1.624,43,3.731,44,3.213,47,1.54,48,0.159,51,0.009,52,0.012,53,0.009,271,1.324,326,2.053,339,2.819,353,2.364,370,1.715,372,4.025,373,4.42,374,3.446,375,4.42,376,4.42,377,4.42,378,4.42,379,4.42,390,3.023,439,2.565,592,2.818,602,4.334,620,3.155,1042,5.454,1043,3.668,1044,3.668,1045,3.668,1046,3.668,1047,3.668,1048,3.668,1049,3.668,1050,3.668,1051,3.668,1052,3.668,1053,2.565,1054,2.565,1055,2.565,1056,3.668]],["title/classes/UpdateContactDto.html",[0,0.166,504,2.397]],["body/classes/UpdateContactDto.html",[0,0.245,2,1.129,3,0.18,4,0.157,5,0.157,9,0.381,10,1.488,15,3.221,18,0.858,19,0.018,21,1.597,23,0.808,25,1.734,26,3.253,28,3.648,37,0.356,38,1.84,43,3.655,44,3.168,47,1.745,48,0.18,51,0.01,52,0.013,53,0.01,271,1.501,291,3.221,370,1.944,485,2.489,504,3.532,507,3.193,518,3.952,519,3.952,520,4.288,603,3.193,605,3.576,610,3.833,1042,5.344,1053,2.907,1054,2.907,1055,2.907,1057,4.157,1058,4.157,1059,4.157,1060,4.157,1061,4.157,1062,4.157]],["title/classes/UpdateCvDTO.html",[0,0.166,656,2.397]],["body/classes/UpdateCvDTO.html",[0,0.261,2,1.026,3,0.164,4,0.143,5,0.143,7,4.22,8,2.903,9,0.346,10,1.396,11,3.767,12,4.087,13,3.499,14,4.489,15,3.071,16,1.663,17,4.087,18,0.905,19,0.018,20,1.743,21,1.633,23,0.826,25,1.704,26,3.165,28,3.271,30,3.95,31,3.251,37,0.319,38,1.673,39,2.115,40,4.423,41,2.115,42,4.423,43,3.703,44,3.165,45,3.251,46,3.251,47,1.587,48,0.164,49,3.251,50,3.251,51,0.009,52,0.012,53,0.009,623,4.423,656,3.314,1063,6.062,1064,3.779,1065,3.779,1066,3.779,1067,3.779,1068,3.779,1069,3.779,1070,3.779,1071,3.779]],["title/classes/UpdateProfileDto.html",[0,0.166,883,2.397]],["body/classes/UpdateProfileDto.html",[0,0.231,2,1.036,3,0.165,4,0.145,5,0.145,9,0.349,10,1.405,13,3.516,18,0.88,19,0.018,21,1.637,23,0.828,25,1.757,26,3.303,28,3.885,37,0.344,38,1.689,43,3.711,44,3.303,47,1.602,48,0.165,51,0.009,52,0.012,53,0.009,271,1.377,370,1.784,611,2.284,613,2.93,614,4.511,615,4.511,616,4.511,617,4.511,618,4.511,619,4.511,624,3.281,883,3.335,887,2.93,911,4.451,1053,2.668,1054,2.668,1055,2.668,1072,6.076,1073,3.815,1074,3.815,1075,3.815,1076,3.815,1077,3.815,1078,3.815,1079,3.815]],["title/classes/UpdateTicketDto.html",[0,0.166,963,2.397]],["body/classes/UpdateTicketDto.html",[0,0.247,2,1.502,3,0.24,4,0.21,5,0.21,19,0.018,37,0.358,48,0.24,51,0.013,52,0.016,53,0.013,271,1.997,370,2.587,631,3.312,633,4.249,963,4.224,968,4.249,1053,3.869,1054,3.869,1055,3.869,1080,4.758,1081,5.531]],["title/controllers/UserController.html",[54,1.219,1082,2.601]],["body/controllers/UserController.html",[0,0.25,3,0.243,4,0.212,5,0.212,19,0.018,37,0.306,48,0.243,51,0.013,52,0.016,53,0.013,54,1.839,56,1.929,65,1.037,171,3.358,241,1.753,662,4.308,663,4.308,671,4.308,1082,4.622,1083,4.824,1084,5.608]],["title/classes/UserEntity.html",[0,0.166,189,1.109]],["body/classes/UserEntity.html",[0,0.217,2,0.736,3,0.118,4,0.103,5,0.103,9,0.248,10,1.101,18,0.893,19,0.019,20,0.809,21,1.647,23,0.833,25,1.522,37,0.343,39,1.517,47,1.139,48,0.176,51,0.006,52,0.01,53,0.006,130,3.519,137,2.719,139,3.131,181,1.617,189,1.209,241,0.848,248,0.933,263,4.179,273,1.517,288,1.268,291,2.552,303,3.398,315,3.456,359,1.896,361,1.896,370,1.896,371,3.514,380,4.179,381,2.614,382,2.614,383,2.614,384,2.614,385,3.115,386,3.771,387,3.514,388,1.342,391,3.489,392,3.131,394,3.115,396,1.748,402,1.624,408,2.428,410,1.748,411,3.771,412,1.896,413,1.748,414,1.896,415,1.517,416,1.896,417,1.748,418,1.896,419,3.759,420,3.732,421,1.896,423,2.332,425,2.428,428,3.489,429,1.896,463,3.23,527,3.489,528,2.428,532,1.896,636,2.083,668,2.833,720,2.083,877,3.398,888,3.017,978,2.083,997,3.489,1001,4.965,1085,2.083,1086,4.858,1087,4.858,1088,2.711,1089,2.711,1090,4.055,1091,2.711,1092,2.711,1093,2.711,1094,2.711,1095,2.711,1096,2.711,1097,2.711,1098,2.711,1099,2.711,1100,2.711,1101,2.711,1102,4.055,1103,2.711,1104,4.055,1105,4.858,1106,2.332,1107,2.332,1108,2.332,1109,2.332,1110,2.332,1111,2.332,1112,2.332,1113,2.332,1114,2.711,1115,2.711,1116,2.711,1117,2.711]],["title/modules/UserModule.html",[78,1.219,96,1.739]],["body/modules/UserModule.html",[0,0.206,3,0.2,4,0.174,5,0.174,19,0.018,37,0.391,48,0.2,51,0.011,52,0.014,53,0.011,56,2.014,65,0.852,78,2.111,80,2.039,81,2.039,82,2.279,83,2.279,84,2.039,85,3.187,86,3.187,96,3.398,97,2.899,98,2.279,99,2.279,101,2.577,118,2.577,119,1.747,126,4.096,127,3.537,189,1.373,212,3.961,227,3.747,1082,4.504,1118,3.961,1119,3.961,1120,3.961,1121,4.605,1122,3.961,1123,4.605,1124,4.605]],["title/injectables/UserService.html",[163,0.836,227,1.841]],["body/injectables/UserService.html",[0,0.123,3,0.119,4,0.104,5,0.104,9,0.251,16,1.843,18,0.821,19,0.019,20,1.459,23,0.804,25,1.153,37,0.317,48,0.119,51,0.006,52,0.01,53,0.006,58,1.111,60,1.798,65,0.507,70,2.025,71,1.358,75,1.884,106,2.124,107,2.124,119,1.041,130,1.358,137,1.535,163,0.92,164,1.094,173,2.846,180,2.712,181,2.896,183,3.247,189,2.088,195,2.584,227,2.025,238,3.519,241,1.814,246,1.643,247,3.035,248,0.944,252,1.215,278,3.519,289,2.108,320,2.536,321,2.025,324,1.552,388,1.358,463,1.535,464,2.108,466,2.637,467,2.637,468,2.108,571,2.36,781,2.36,877,2.861,1122,2.36,1125,2.36,1126,4.091,1127,5.423,1128,4.091,1129,4.091,1130,4.091,1131,2.744,1132,2.744,1133,4.091,1134,4.091,1135,2.744,1136,2.744,1137,2.744,1138,4.091,1139,2.744,1140,4.091,1141,2.744,1142,4.091,1143,2.744,1144,4.091,1145,2.744,1146,4.091,1147,2.744,1148,4.091,1149,2.744,1150,2.744,1151,2.744,1152,2.744,1153,2.744,1154,2.744,1155,2.744,1156,2.744,1157,2.744,1158,2.744,1159,2.744,1160,2.744,1161,2.744,1162,2.744,1163,2.744,1164,2.744]],["title/coverage.html",[1165,3.907]],["body/coverage.html",[0,0.33,1,1.88,5,0.11,6,2.509,7,2.563,8,3.288,18,0.37,19,0.018,51,0.007,52,0.01,53,0.007,54,2.161,55,2.04,57,2.509,66,1.746,84,1.291,114,2.04,116,2.24,163,1.577,165,2.509,169,2.04,170,2.509,177,1.88,183,1.746,187,1.632,189,0.87,203,1.88,222,2.509,227,1.443,230,1.88,241,0.912,272,1.291,308,1.746,309,2.509,310,2.04,311,2.509,317,2.04,318,2.509,326,1.632,339,1.632,346,1.632,347,1.746,350,1.746,355,1.443,369,2.509,371,1.632,390,1.532,408,1.746,434,1.746,436,2.04,442,2.509,481,2.509,485,1.746,504,1.88,517,2.509,536,2.509,591,3.288,592,3.288,603,3.288,611,1.746,612,2.509,613,3.288,631,1.746,632,2.509,633,3.288,634,2.04,635,2.509,656,1.88,664,1.746,668,1.532,697,2.509,718,6.626,728,2.04,731,2.509,757,2.24,809,2.509,832,2.509,847,2.509,850,2.509,868,2.509,872,2.04,874,2.509,875,2.04,876,2.509,883,1.88,885,1.746,888,1.632,900,2.509,925,2.509,950,2.509,956,2.04,957,2.509,963,1.88,966,1.746,976,2.24,1025,2.509,1035,2.509,1042,3.288,1063,2.509,1072,2.509,1080,2.509,1082,2.04,1083,2.509,1085,2.24,1125,2.509,1165,2.24,1166,2.916,1167,2.916,1168,2.916,1169,5.587,1170,5.071,1171,2.916,1172,2.916,1173,4.28,1174,6.427,1175,2.916,1176,2.916,1177,2.916,1178,6.427,1179,4.28,1180,2.916,1181,5.587,1182,4.28,1183,4.28,1184,2.916,1185,2.916,1186,2.916,1187,5.071,1188,2.509,1189,4.28,1190,2.509,1191,2.509,1192,2.916,1193,2.916,1194,2.916,1195,2.916,1196,2.916]],["title/dependencies.html",[81,1.981,1197,3.101]],["body/dependencies.html",[0,0.261,19,0.019,38,2.033,39,2.57,47,1.928,51,0.011,52,0.014,53,0.011,65,0.849,69,3.212,81,2.033,119,1.742,126,3.212,132,3.95,206,3.527,208,3.212,215,3.212,248,1.579,249,3.95,857,5.029,1198,6.431,1199,4.592,1200,4.592,1201,4.592,1202,4.592,1203,4.592,1204,5.846,1205,4.592,1206,4.592,1207,4.592,1208,4.592,1209,4.592,1210,4.592,1211,4.592,1212,4.592,1213,4.592,1214,4.592,1215,5.846,1216,4.592,1217,4.592,1218,3.95,1219,4.592,1220,4.592,1221,4.592,1222,4.592,1223,4.592,1224,4.592,1225,4.592,1226,4.592,1227,4.592,1228,4.592,1229,4.592,1230,4.592,1231,4.592,1232,4.592,1233,4.592,1234,4.592,1235,4.592]],["title/miscellaneous/enumerations.html",[1236,1.857,1237,3.85]],["body/miscellaneous/enumerations.html",[9,0.439,19,0.018,51,0.011,52,0.014,53,0.011,241,1.499,272,2.66,359,3.354,361,3.354,463,3.362,753,5.892,976,3.684,978,3.684,1002,5.168,1003,5.168,1004,5.168,1005,5.168,1006,5.168,1007,5.168,1008,5.168,1009,5.168,1010,5.168,1085,3.684,1106,4.125,1107,4.125,1108,4.125,1109,4.125,1110,4.125,1111,4.125,1112,4.125,1113,4.125,1236,2.872,1237,4.125,1238,6.008,1239,4.796]],["title/miscellaneous/functions.html",[1236,1.857,1240,3.85]],["body/miscellaneous/functions.html",[9,0.538,19,0.016,51,0.014,52,0.016,53,0.014,84,3.17,1190,5.051,1236,3.516,1240,5.051,1241,5.872]],["title/index.html",[9,0.284,1242,3.101,1243,3.101]],["body/index.html",[4,0.169,19,0.018,51,0.011,52,0.014,53,0.011,247,2.499,374,2.674,549,3.841,768,4.94,1165,3.43,1218,5.46,1244,4.466,1245,4.466,1246,5.742,1247,4.466,1248,4.466,1249,4.466,1250,4.466,1251,4.466,1252,4.466,1253,4.466,1254,4.466,1255,4.466,1256,4.466,1257,4.466,1258,4.466,1259,7.216,1260,4.466,1261,4.466,1262,4.466,1263,7.094,1264,4.466,1265,4.466,1266,5.742,1267,4.466,1268,4.466,1269,4.466,1270,4.466,1271,5.742,1272,4.466,1273,4.466,1274,4.466,1275,5.742,1276,5.742,1277,4.466,1278,4.466,1279,4.466,1280,4.466,1281,4.466,1282,3.841,1283,4.466,1284,4.466,1285,4.466,1286,4.466,1287,4.466,1288,4.466,1289,4.466,1290,4.466,1291,4.466,1292,4.466,1293,4.466,1294,4.466,1295,4.466,1296,4.466,1297,4.466,1298,4.466,1299,4.466]],["title/modules.html",[80,2.251]],["body/modules.html",[19,0.015,51,0.012,52,0.015,53,0.012,79,3.669,80,2.322,90,3.381,91,3.381,92,3.381,93,3.381,94,3.381,95,3.381,96,2.453,1282,6.485,1300,7.539,1301,7.539,1302,7.539]],["title/overview.html",[1303,4.375]],["body/overview.html",[2,0.961,19,0.018,51,0.008,52,0.012,53,0.008,56,1.217,66,3.382,78,1.16,79,5.253,80,1.567,81,1.567,82,1.752,83,1.752,84,1.567,85,1.752,86,1.752,87,3.045,88,3.045,89,3.045,90,4.646,91,4.541,92,4.386,93,4.276,94,4.386,95,4.386,96,3.37,97,2.433,98,1.752,99,1.752,164,1.412,187,3.808,199,3.045,201,3.045,202,3.045,203,4.386,227,3.368,308,4.075,350,3.382,431,3.045,432,3.045,434,3.382,664,3.382,691,3.045,723,3.045,725,3.045,842,3.045,843,3.045,844,3.045,872,2.476,885,3.382,919,3.045,920,3.045,966,3.382,1018,3.045,1020,3.045,1118,3.045,1119,3.045,1120,3.045,1303,3.045,1304,4.916,1305,3.54,1306,3.54]],["title/miscellaneous/variables.html",[1236,1.857,1307,3.85]],["body/miscellaneous/variables.html",[9,0.464,19,0.018,25,1.194,51,0.012,52,0.015,53,0.012,75,1.441,116,4.774,154,3.722,180,2.368,241,2.25,252,2.752,260,4.774,286,4.357,528,3.722,753,4.774,834,4.357,836,4.357,1188,4.357,1191,4.357,1236,3.033,1307,4.357,1308,5.065,1309,5.065,1310,5.065,1311,5.065,1312,5.065,1313,5.065,1314,5.065,1315,5.065,1316,5.065,1317,5.065]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":718,"title":{},"body":{"classes/CurriculumEntity.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1306,"title":{},"body":{"overview.html":{}}}],["1.0.1",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["1.9.2",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["1/6",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":691,"title":{},"body":{"controllers/CurriculumController.html":{},"overview.html":{}}}],["120",{"_index":993,"title":{},"body":{"classes/TicketEntity.html":{}}}],["16",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":527,"title":{},"body":{"classes/ContactEntity.html":{},"classes/UserEntity.html":{}}}],["2.18.1",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1305,"title":{},"body":{"overview.html":{}}}],["255",{"_index":385,"title":{},"body":{"classes/ClientEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["3.0.2",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["3600s",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["4",{"_index":688,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["4.0.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":689,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["5.0.0",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":708,"title":{},"body":{"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{}}}],["59",{"_index":786,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["6",{"_index":690,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["6.6.3",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["7.1.0",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["7.1.4",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1304,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":905,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["_id",{"_index":745,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["_sign",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["_sign(payload",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessors",{"_index":901,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["action",{"_index":1031,"title":{},"body":{"injectables/TicketService.html":{}}}],["add",{"_index":544,"title":{},"body":{"injectables/ContactService.html":{},"injectables/CurriculumService.html":{}}}],["add(addcvdto",{"_index":738,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["addcvdto",{"_index":1,"title":{"classes/AddCvDTO.html":{}},"body":{"classes/AddCvDTO.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"coverage.html":{}}}],["address",{"_index":614,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/ProfileEntity.html":{},"classes/UpdateProfileDto.html":{}}}],["adds",{"_index":1032,"title":{},"body":{"injectables/TicketService.html":{}}}],["admin",{"_index":1108,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["afterinsert",{"_index":712,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["age",{"_index":11,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/UpdateCvDTO.html":{}}}],["amazing",{"_index":1283,"title":{},"body":{"index.html":{}}}],["andwhere('contact.clientid",{"_index":583,"title":{},"body":{"injectables/ContactService.html":{}}}],["angular",{"_index":1255,"title":{},"body":{"index.html":{}}}],["ans",{"_index":692,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["apiproperty",{"_index":26,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{}}}],["apiproperty()@isarray",{"_index":595,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["apiproperty()@isboolean()@isoptional",{"_index":31,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/UpdateCvDTO.html":{}}}],["apiproperty()@isnotempty",{"_index":869,"title":{},"body":{"classes/LoginCredentialsDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":951,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":33,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/RegisterAuthDto.html":{}}}],["apiproperty()@isnotempty()@type(undefined",{"_index":953,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["apiproperty()@isnotempty()@type(undefined)@isnumber()@min(15)@max(65",{"_index":22,"title":{},"body":{"classes/AddCvDTO.html":{}}}],["apiproperty()@isoptional",{"_index":1044,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["apiproperty()@isoptional()@isemail",{"_index":605,"title":{},"body":{"classes/CreateContactDto.html":{},"classes/UpdateContactDto.html":{}}}],["apiproperty()@isoptional()@isstring",{"_index":28,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{}}}],["apiproperty()@isoptional()@isurl",{"_index":1048,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["apiproperty()@isoptional()@type(undefined)@isnumber()@min(15)@max(65",{"_index":1064,"title":{},"body":{"classes/UpdateCvDTO.html":{}}}],["apiproperty()@isstring",{"_index":625,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":628,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["apiproperty()@isstring()@isoptional",{"_index":620,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateClientDto.html":{}}}],["app",{"_index":1261,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":55,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1252,"title":{},"body":{"index.html":{}}}],["apply(firstmiddleware",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["apply(logger",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":79,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":66,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":400,"title":{},"body":{"classes/ClientEntity.html":{},"injectables/CurriculumService.html":{}}}],["assignation",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["assignto",{"_index":977,"title":{},"body":{"classes/TicketEntity.html":{}}}],["async",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":348,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{}}}],["auth.guard.ts",{"_index":847,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/login.credentials.dto",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authcontroller",{"_index":169,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":848,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":849,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":90,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1292,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":187,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["await",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":1284,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('username",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.gensalt",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(user.password",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["beforeinsert",{"_index":812,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["beforeinsert(event",{"_index":817,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["body",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CurriculumEntity.html":{},"classes/UpdateCvDTO.html":{}}}],["bootstrap",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1302,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1300,"title":{},"body":{"modules.html":{}}}],["builder",{"_index":679,"title":{},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["building",{"_index":1247,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":394,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/UserEntity.html":{}}}],["casl${d.getmonth()}${d.getutcfullyear()}${d.getseconds",{"_index":316,"title":{},"body":{"injectables/CinGeneratorService.html":{}}}],["catch",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["cherchez/grouper",{"_index":795,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["cin",{"_index":12,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CurriculumEntity.html":{},"modules/HelpersModule.html":{},"classes/UpdateCvDTO.html":{}}}],["cingenerator",{"_index":811,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["cingeneratorservice",{"_index":308,"title":{"injectables/CinGeneratorService.html":{}},"body":{"injectables/CinGeneratorService.html":{},"classes/CurriculumSubscriber.html":{},"modules/HelpersModule.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":0,"title":{"classes/AddCvDTO.html":{},"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"classes/CurriculumEntity.html":{},"classes/CurriculumSubscriber.html":{},"classes/LoginCredentialsDto.html":{},"classes/ProfileEntity.html":{},"classes/RegisterAuthDto.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UserEntity.html":{}},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"classes/CurriculumEntity.html":{},"classes/CurriculumSubscriber.html":{},"classes/LoginCredentialsDto.html":{},"classes/ProfileEntity.html":{},"classes/RegisterAuthDto.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":662,"title":{},"body":{"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["client",{"_index":319,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/TicketEntity.html":{}}}],["client.contacts",{"_index":535,"title":{},"body":{"classes/ContactEntity.html":{}}}],["client.controller",{"_index":437,"title":{},"body":{"modules/ClientModule.html":{}}}],["client.dto",{"_index":353,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/UpdateClientDto.html":{}}}],["client.dto.ts",{"_index":592,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["client.dto.ts:11",{"_index":1043,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:13",{"_index":600,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:16",{"_index":1052,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:18",{"_index":597,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:21",{"_index":1049,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:22",{"_index":596,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:26",{"_index":1047,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:27",{"_index":599,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:31",{"_index":1051,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:32",{"_index":594,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:36",{"_index":1046,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:37",{"_index":598,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:41",{"_index":1050,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:45",{"_index":1045,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["client.dto.ts:8",{"_index":593,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.entity",{"_index":533,"title":{},"body":{"classes/ContactEntity.html":{}}}],["client.service",{"_index":351,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{}}}],["client.tickets",{"_index":1017,"title":{},"body":{"classes/TicketEntity.html":{}}}],["client/client.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["client_id",{"_index":488,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["clientcontroller",{"_index":317,"title":{"controllers/ClientController.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"coverage.html":{}}}],["cliententity",{"_index":355,"title":{"classes/ClientEntity.html":{}},"body":{"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/TicketEntity.html":{},"coverage.html":{}}}],["clientexist",{"_index":585,"title":{},"body":{"injectables/ContactService.html":{}}}],["clientid",{"_index":580,"title":{},"body":{"injectables/ContactService.html":{}}}],["clientmodule",{"_index":91,"title":{"modules/ClientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules.html":{},"overview.html":{}}}],["clientrepository",{"_index":447,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{}}}],["clients",{"_index":451,"title":{},"body":{"injectables/ClientService.html":{}}}],["clientservice",{"_index":350,"title":{"injectables/ClientService.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_clientmodule",{"_index":431,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_imports",{"_index":433,"title":{},"body":{"modules/ClientModule.html":{}}}],["cluster_clientmodule_providers",{"_index":432,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_curriculummodule",{"_index":723,"title":{},"body":{"modules/CurriculumModule.html":{},"overview.html":{}}}],["cluster_curriculummodule_imports",{"_index":724,"title":{},"body":{"modules/CurriculumModule.html":{}}}],["cluster_curriculummodule_providers",{"_index":725,"title":{},"body":{"modules/CurriculumModule.html":{},"overview.html":{}}}],["cluster_helpersmodule",{"_index":842,"title":{},"body":{"modules/HelpersModule.html":{},"overview.html":{}}}],["cluster_helpersmodule_exports",{"_index":843,"title":{},"body":{"modules/HelpersModule.html":{},"overview.html":{}}}],["cluster_helpersmodule_providers",{"_index":844,"title":{},"body":{"modules/HelpersModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":919,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":921,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":920,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_ticketmodule",{"_index":1018,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_ticketmodule_imports",{"_index":1019,"title":{},"body":{"modules/TicketModule.html":{}}}],["cluster_ticketmodule_providers",{"_index":1020,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1118,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1120,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1119,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":1012,"title":{},"body":{"classes/TicketEntity.html":{}}}],["column",{"_index":419,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["column('simple",{"_index":399,"title":{},"body":{"classes/ClientEntity.html":{}}}],["column({default",{"_index":705,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["column({length",{"_index":384,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["column({nullable",{"_index":402,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["column({type",{"_index":396,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["column({unique",{"_index":701,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["comment",{"_index":518,"title":{},"body":{"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"classes/TicketEntity.html":{},"classes/UpdateContactDto.html":{}}}],["company",{"_index":372,"title":{},"body":{"classes/ClientEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["configmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('app_secret",{"_index":865,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configure",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflictexception(error.message",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":815,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["connection.subscribers.push(this",{"_index":825,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["console.log",{"_index":770,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["console.log('ip",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('je",{"_index":838,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["console.log('payload",{"_index":866,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('port",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(`before",{"_index":827,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["console.log(curriculum",{"_index":789,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["console.log(payload",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(qb.getsql",{"_index":802,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["console.log(this.counters",{"_index":719,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["console.log(user",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(clientrepository",{"_index":445,"title":{},"body":{"injectables/ClientService.html":{}}}],["constructor(configservice",{"_index":852,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(connection",{"_index":814,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["constructor(contactrepository",{"_index":539,"title":{},"body":{"injectables/ContactService.html":{}}}],["constructor(curriculumrepository",{"_index":735,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["constructor(jwtservice",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["constructor(profilerepository",{"_index":926,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(userrepository",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["consumer",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["contact",{"_index":426,"title":{},"body":{"classes/ClientEntity.html":{},"injectables/ContactService.html":{}}}],["contact.client",{"_index":427,"title":{},"body":{"classes/ClientEntity.html":{},"injectables/ContactService.html":{}}}],["contact.controller",{"_index":438,"title":{},"body":{"modules/ClientModule.html":{}}}],["contact.dto",{"_index":507,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/UpdateContactDto.html":{}}}],["contact.dto.ts",{"_index":603,"title":{},"body":{"classes/CreateContactDto.html":{},"classes/UpdateContactDto.html":{},"coverage.html":{}}}],["contact.dto.ts:10",{"_index":1059,"title":{},"body":{"classes/UpdateContactDto.html":{}}}],["contact.dto.ts:13",{"_index":608,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["contact.dto.ts:15",{"_index":1060,"title":{},"body":{"classes/UpdateContactDto.html":{}}}],["contact.dto.ts:18",{"_index":609,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["contact.dto.ts:20",{"_index":1061,"title":{},"body":{"classes/UpdateContactDto.html":{}}}],["contact.dto.ts:23",{"_index":606,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["contact.dto.ts:25",{"_index":1058,"title":{},"body":{"classes/UpdateContactDto.html":{}}}],["contact.dto.ts:28",{"_index":604,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["contact.dto.ts:30",{"_index":1057,"title":{},"body":{"classes/UpdateContactDto.html":{}}}],["contact.dto.ts:8",{"_index":607,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["contact.entity",{"_index":422,"title":{},"body":{"classes/ClientEntity.html":{}}}],["contact.id",{"_index":579,"title":{},"body":{"injectables/ContactService.html":{}}}],["contact.service",{"_index":440,"title":{},"body":{"modules/ClientModule.html":{},"controllers/ContactController.html":{}}}],["contact_id",{"_index":497,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["contactcontroller",{"_index":436,"title":{"controllers/ContactController.html":{}},"body":{"modules/ClientModule.html":{},"controllers/ContactController.html":{},"coverage.html":{}}}],["contactentity",{"_index":390,"title":{"classes/ContactEntity.html":{}},"body":{"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["contactrepository",{"_index":541,"title":{},"body":{"injectables/ContactService.html":{}}}],["contacts",{"_index":373,"title":{},"body":{"classes/ClientEntity.html":{},"injectables/ContactService.html":{},"classes/UpdateClientDto.html":{}}}],["contactservice",{"_index":434,"title":{"injectables/ContactService.html":{}},"body":{"modules/ClientModule.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"coverage.html":{},"overview.html":{}}}],["controller",{"_index":54,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('client",{"_index":358,"title":{},"body":{"controllers/ClientController.html":{}}}],["controller('curriculum",{"_index":672,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["controller('profile",{"_index":890,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('ticket",{"_index":969,"title":{},"body":{"controllers/TicketController.html":{}}}],["controller('user",{"_index":1084,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"modules/CurriculumModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["corresponding",{"_index":564,"title":{},"body":{"injectables/ContactService.html":{}}}],["count(cv.id",{"_index":799,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["counters",{"_index":698,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["coverage",{"_index":1165,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{}}}],["create(@body",{"_index":891,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["create(client_id",{"_index":484,"title":{},"body":{"controllers/ContactController.html":{}}}],["create(createclientdto",{"_index":325,"title":{},"body":{"controllers/ClientController.html":{}}}],["create(createticketdto",{"_index":958,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["create(data",{"_index":448,"title":{},"body":{"injectables/ClientService.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["create(id",{"_index":542,"title":{},"body":{"injectables/ContactService.html":{}}}],["createclientdto",{"_index":326,"title":{"classes/CreateClientDto.html":{}},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["createcontactdto",{"_index":485,"title":{"classes/CreateContactDto.html":{}},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"classes/UpdateContactDto.html":{},"coverage.html":{}}}],["created_at",{"_index":381,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["createdatecolumn",{"_index":1040,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["createdatecolumn({update",{"_index":410,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["createentity",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["createentity(userdata",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["createparamdecorator((data",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprofiledto",{"_index":611,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createquerybuilder",{"_index":565,"title":{},"body":{"injectables/ContactService.html":{}}}],["createquerybuilder('client",{"_index":478,"title":{},"body":{"injectables/ClientService.html":{}}}],["createquerybuilder('contact",{"_index":568,"title":{},"body":{"injectables/ContactService.html":{}}}],["createquerybuilder('user",{"_index":1161,"title":{},"body":{"injectables/UserService.html":{}}}],["createticketdto",{"_index":631,"title":{"classes/CreateTicketDto.html":{}},"body":{"classes/CreateTicketDto.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["credentials",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["creer",{"_index":791,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["criteria",{"_index":681,"title":{},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["crypt",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curriculum",{"_index":636,"title":{},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/UserEntity.html":{}}}],["curriculum.controller",{"_index":727,"title":{},"body":{"modules/CurriculumModule.html":{}}}],["curriculum.service",{"_index":665,"title":{},"body":{"controllers/CurriculumController.html":{},"modules/CurriculumModule.html":{}}}],["curriculum.user",{"_index":1116,"title":{},"body":{"classes/UserEntity.html":{}}}],["curriculum/curriculum.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["curriculumcontroller",{"_index":634,"title":{"controllers/CurriculumController.html":{}},"body":{"controllers/CurriculumController.html":{},"modules/CurriculumModule.html":{},"coverage.html":{}}}],["curriculumentity",{"_index":668,"title":{"classes/CurriculumEntity.html":{}},"body":{"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["curriculummodule",{"_index":92,"title":{"modules/CurriculumModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CurriculumModule.html":{},"modules.html":{},"overview.html":{}}}],["curriculumrepository",{"_index":737,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["curriculums",{"_index":1086,"title":{},"body":{"classes/UserEntity.html":{}}}],["curriculumservice",{"_index":664,"title":{"injectables/CurriculumService.html":{}},"body":{"controllers/CurriculumController.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"coverage.html":{},"overview.html":{}}}],["curriculumsubscriber",{"_index":728,"title":{"classes/CurriculumSubscriber.html":{}},"body":{"modules/CurriculumModule.html":{},"classes/CurriculumSubscriber.html":{},"coverage.html":{}}}],["customer",{"_index":978,"title":{},"body":{"classes/TicketEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["customize",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["cv",{"_index":7,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"classes/UpdateCvDTO.html":{},"coverage.html":{}}}],["cv.cin",{"_index":830,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["cvtoremove",{"_index":775,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["d",{"_index":314,"title":{},"body":{"injectables/CinGeneratorService.html":{}}}],["dans",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CinGeneratorService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{}}}],["date",{"_index":315,"title":{},"body":{"injectables/CinGeneratorService.html":{},"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["de",{"_index":556,"title":{},"body":{"injectables/ContactService.html":{},"injectables/CurriculumService.html":{}}}],["declarations",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"classes/LoginCredentialsDto.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UserEntity.html":{}}}],["decorators/user.decorator",{"_index":670,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["default",{"_index":528,"title":{},"body":{"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["delete(':id",{"_index":336,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["delete('client/:client_id/contact/:contact_id",{"_index":501,"title":{},"body":{"controllers/ContactController.html":{}}}],["delete('delete/:id",{"_index":693,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["delete(criteria",{"_index":740,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["delete(id",{"_index":641,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["delete_at",{"_index":382,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["deleted",{"_index":456,"title":{},"body":{"injectables/ClientService.html":{}}}],["deletedatecolumn",{"_index":413,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["dependencies",{"_index":81,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactService.html":{}}}],["desc",{"_index":473,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{}}}],["description",{"_index":374,"title":{},"body":{"classes/ClientEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/TicketEntity.html":{},"classes/UpdateClientDto.html":{},"index.html":{}}}],["destructuring",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":1262,"title":{},"body":{"index.html":{}}}],["disable",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["dist/**/*.subscriber{.ts,.js",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurriculumService.html":{},"injectables/ProfileService.html":{}}}],["don't",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["dotenv",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["droit",{"_index":555,"title":{},"body":{"injectables/ContactService.html":{}}}],["dto",{"_index":667,"title":{},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["dto.ts",{"_index":8,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/UpdateCvDTO.html":{},"coverage.html":{}}}],["dto.ts:12",{"_index":1067,"title":{},"body":{"classes/UpdateCvDTO.html":{}}}],["dto.ts:14",{"_index":29,"title":{},"body":{"classes/AddCvDTO.html":{}}}],["dto.ts:20",{"_index":1065,"title":{},"body":{"classes/UpdateCvDTO.html":{}}}],["dto.ts:22",{"_index":24,"title":{},"body":{"classes/AddCvDTO.html":{}}}],["dto.ts:25",{"_index":1066,"title":{},"body":{"classes/UpdateCvDTO.html":{}}}],["dto.ts:27",{"_index":27,"title":{},"body":{"classes/AddCvDTO.html":{}}}],["dto.ts:30",{"_index":1069,"title":{},"body":{"classes/UpdateCvDTO.html":{}}}],["dto.ts:32",{"_index":34,"title":{},"body":{"classes/AddCvDTO.html":{}}}],["dto.ts:35",{"_index":1071,"title":{},"body":{"classes/UpdateCvDTO.html":{}}}],["dto.ts:37",{"_index":36,"title":{},"body":{"classes/AddCvDTO.html":{}}}],["dto.ts:40",{"_index":1068,"title":{},"body":{"classes/UpdateCvDTO.html":{}}}],["dto.ts:42",{"_index":32,"title":{},"body":{"classes/AddCvDTO.html":{}}}],["dto.ts:8",{"_index":1070,"title":{},"body":{"classes/UpdateCvDTO.html":{}}}],["dto.ts:9",{"_index":35,"title":{},"body":{"classes/AddCvDTO.html":{}}}],["dto/add",{"_index":666,"title":{},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["dto/create",{"_index":352,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["dto/register.auth.dto",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":354,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["e",{"_index":554,"title":{},"body":{"injectables/ContactService.html":{}}}],["e2e",{"_index":1272,"title":{},"body":{"index.html":{}}}],["eager",{"_index":393,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{}}}],["efficient",{"_index":1248,"title":{},"body":{"index.html":{}}}],["email",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"interfaces/PayloadInterface.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateContactDto.html":{},"classes/UserEntity.html":{}}}],["emails",{"_index":375,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["engineer",{"_index":1110,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["ensemble",{"_index":559,"title":{},"body":{"injectables/ContactService.html":{}}}],["entities",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/CurriculumService.html":{}}}],["entities/client.entity",{"_index":356,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{}}}],["entities/contact.entity",{"_index":439,"title":{},"body":{"modules/ClientModule.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/UpdateClientDto.html":{}}}],["entities/curriculum.entity",{"_index":669,"title":{},"body":{"controllers/CurriculumController.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{}}}],["entities/profile.entity",{"_index":889,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["entities/ticket.entity",{"_index":1023,"title":{},"body":{"modules/TicketModule.html":{}}}],["entities/user.entity",{"_index":1122,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["entity('client",{"_index":424,"title":{},"body":{"classes/ClientEntity.html":{}}}],["entity('contact",{"_index":534,"title":{},"body":{"classes/ContactEntity.html":{}}}],["entity('curriculum",{"_index":716,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["entity('profile",{"_index":916,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["entity('ticket",{"_index":1011,"title":{},"body":{"classes/TicketEntity.html":{}}}],["entity('user",{"_index":1114,"title":{},"body":{"classes/UserEntity.html":{}}}],["entitysubscriberinterface",{"_index":810,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["enum",{"_index":1001,"title":{},"body":{"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["enumerations",{"_index":1237,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["eslint",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["est",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["event",{"_index":820,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["event.entity",{"_index":829,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["eventsubscriber",{"_index":822,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["except",{"_index":546,"title":{},"body":{"injectables/ContactService.html":{}}}],["exclude",{"_index":1105,"title":{},"body":{"classes/UserEntity.html":{}}}],["exclude()@column",{"_index":1090,"title":{},"body":{"classes/UserEntity.html":{}}}],["executioncontext",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["expiresin",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["expose",{"_index":915,"title":{},"body":{"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{}}}],["express",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":370,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TicketEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UserEntity.html":{}}}],["extractjwt",{"_index":856,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":862,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factorize",{"_index":756,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["false",{"_index":388,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"injectables/JwtStrategy.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1015,"title":{},"body":{"classes/TicketEntity.html":{}}}],["find",{"_index":453,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/ProfileService.html":{}}}],["find(id",{"_index":644,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["findall",{"_index":320,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["findallwithprofile",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":733,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["findbyid(_id",{"_index":743,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["findbyusername",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusername(data",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":321,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":363,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["findone(data",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(id",{"_index":329,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["first",{"_index":840,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["firstmiddleware",{"_index":114,"title":{"injectables/FirstMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirstMiddleware.html":{},"coverage.html":{}}}],["firstname",{"_index":13,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateProfileDto.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{}}}],["fixe",{"_index":615,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/ProfileEntity.html":{},"classes/UpdateProfileDto.html":{}}}],["flexible",{"_index":778,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["followers",{"_index":979,"title":{},"body":{"classes/TicketEntity.html":{}}}],["forroutes",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":573,"title":{},"body":{"injectables/ContactService.html":{}}}],["framework",{"_index":1246,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":519,"title":{},"body":{"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"classes/ProfileEntity.html":{},"classes/UpdateContactDto.html":{}}}],["function",{"_index":757,"title":{},"body":{"injectables/CurriculumService.html":{},"injectables/FirstMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":1240,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator.service",{"_index":824,"title":{},"body":{"classes/CurriculumSubscriber.html":{},"modules/HelpersModule.html":{}}}],["generator.service.ts",{"_index":311,"title":{},"body":{"injectables/CinGeneratorService.html":{},"coverage.html":{}}}],["generator.service.ts:5",{"_index":313,"title":{},"body":{"injectables/CinGeneratorService.html":{}}}],["generator/cin",{"_index":310,"title":{},"body":{"injectables/CinGeneratorService.html":{},"classes/CurriculumSubscriber.html":{},"modules/HelpersModule.html":{},"coverage.html":{}}}],["get(':id",{"_index":330,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{},"controllers/TicketController.html":{}}}],["get('client/:client_id/contact",{"_index":494,"title":{},"body":{"controllers/ContactController.html":{}}}],["get('client/:client_id/contact/:contact_id",{"_index":498,"title":{},"body":{"controllers/ContactController.html":{}}}],["get('contact/:id",{"_index":491,"title":{},"body":{"controllers/ContactController.html":{}}}],["get('contacts",{"_index":489,"title":{},"body":{"controllers/ContactController.html":{}}}],["get('restore/:id",{"_index":333,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{}}}],["get('stats",{"_index":654,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["get('user/:id",{"_index":895,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('users",{"_index":893,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getall",{"_index":537,"title":{},"body":{"injectables/ContactService.html":{}}}],["getall(id",{"_index":551,"title":{},"body":{"injectables/ContactService.html":{}}}],["getallbyclient",{"_index":482,"title":{},"body":{"controllers/ContactController.html":{}}}],["getallbyclient(client_id",{"_index":493,"title":{},"body":{"controllers/ContactController.html":{}}}],["getfullname",{"_index":913,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["gethello",{"_index":166,"title":{},"body":{"injectables/AppService.html":{}}}],["getmany",{"_index":571,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["getone",{"_index":538,"title":{},"body":{"injectables/ContactService.html":{}}}],["getone(client_id",{"_index":560,"title":{},"body":{"injectables/ContactService.html":{}}}],["getonebyclient",{"_index":483,"title":{},"body":{"controllers/ContactController.html":{}}}],["getonebyclient(client_id",{"_index":496,"title":{},"body":{"controllers/ContactController.html":{}}}],["getownerall",{"_index":732,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["getrawone",{"_index":582,"title":{},"body":{"injectables/ContactService.html":{}}}],["getsql",{"_index":584,"title":{},"body":{"injectables/ContactService.html":{}}}],["getting",{"_index":1242,"title":{"index.html":{}},"body":{}}],["global",{"_index":846,"title":{},"body":{"modules/HelpersModule.html":{}}}],["god",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["groupby('cv.job",{"_index":801,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["groupcvnumberbyage",{"_index":734,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["grow",{"_index":1279,"title":{},"body":{"index.html":{}}}],["handle",{"_index":312,"title":{},"body":{"injectables/CinGeneratorService.html":{}}}],["hashed",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedpassword",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["heavily",{"_index":1253,"title":{},"body":{"index.html":{}}}],["hello",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["helpers/cin",{"_index":823,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["helpers/helpers.module",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["helpersmodule",{"_index":93,"title":{"modules/HelpersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpersModule.html":{},"modules.html":{},"overview.html":{}}}],["here",{"_index":1289,"title":{},"body":{"index.html":{}}}],["hide",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["high",{"_index":1003,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["host",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":1296,"title":{},"body":{"index.html":{}}}],["id",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["id1",{"_index":779,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["id2",{"_index":780,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["identifier",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":863,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index(@user",{"_index":673,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["index(user",{"_index":647,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inherited",{"_index":411,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["injectable",{"_index":163,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["injectrepository(cliententity",{"_index":465,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{}}}],["injectrepository(contactentity",{"_index":566,"title":{},"body":{"injectables/ContactService.html":{}}}],["injectrepository(curriculumentity",{"_index":755,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["injectrepository(profileentity",{"_index":935,"title":{},"body":{"injectables/ProfileService.html":{}}}],["injectrepository(userentity",{"_index":1151,"title":{},"body":{"injectables/UserService.html":{}}}],["innerjoinandselect('contact.client",{"_index":569,"title":{},"body":{"injectables/ContactService.html":{}}}],["insert",{"_index":722,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["inserted",{"_index":828,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["insertevent",{"_index":818,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["inspired",{"_index":1254,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1258,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1260,"title":{},"body":{"index.html":{}}}],["interface",{"_index":872,"title":{"interfaces/PayloadInterface.html":{}},"body":{"interfaces/PayloadInterface.html":{},"coverage.html":{},"overview.html":{}}}],["interface/payload.interface",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":873,"title":{},"body":{"interfaces/PayloadInterface.html":{}}}],["internalservererrorexception",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["isactive",{"_index":14,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CurriculumEntity.html":{},"classes/UpdateCvDTO.html":{}}}],["isadminormanager",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["isadminormanager(user",{"_index":1142,"title":{},"body":{"injectables/UserService.html":{}}}],["isarray",{"_index":601,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["isboolean",{"_index":40,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/UpdateCvDTO.html":{}}}],["isdatestring",{"_index":1104,"title":{},"body":{"classes/UserEntity.html":{}}}],["isemail",{"_index":610,"title":{},"body":{"classes/CreateContactDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateContactDto.html":{}}}],["isglobal",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":41,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateCvDTO.html":{}}}],["isnumber",{"_index":42,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/UpdateCvDTO.html":{}}}],["isoptional",{"_index":43,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{}}}],["isoptional()@isstring",{"_index":623,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateCvDTO.html":{}}}],["isowneroradmin",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["isowneroradmin(object",{"_index":1144,"title":{},"body":{"injectables/UserService.html":{}}}],["isstring",{"_index":44,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{}}}],["isurl",{"_index":602,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["it's",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["job",{"_index":15,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{}}}],["join",{"_index":549,"title":{},"body":{"injectables/ContactService.html":{},"index.html":{}}}],["joincolumn",{"_index":997,"title":{},"body":{"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["jointable",{"_index":999,"title":{},"body":{"classes/TicketEntity.html":{}}}],["jwt",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":346,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":861,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":203,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1293,"title":{},"body":{"index.html":{}}}],["l",{"_index":558,"title":{},"body":{"injectables/ContactService.html":{}}}],["lastname",{"_index":616,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/ProfileEntity.html":{},"classes/UpdateProfileDto.html":{}}}],["lazy",{"_index":428,"title":{},"body":{"classes/ClientEntity.html":{},"classes/UserEntity.html":{}}}],["le",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurriculumService.html":{},"injectables/FirstMiddleware.html":{}}}],["leftjoin('contact.client",{"_index":577,"title":{},"body":{"injectables/ContactService.html":{}}}],["leftjoinandselect('user.profile",{"_index":1162,"title":{},"body":{"injectables/UserService.html":{}}}],["legend",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":425,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["license",{"_index":1299,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1276,"title":{},"body":{"index.html":{}}}],["line",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["link_util",{"_index":376,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["list",{"_index":774,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["listento",{"_index":813,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["logger",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(credentials",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(data",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["logincredentialsdto",{"_index":177,"title":{"classes/LoginCredentialsDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginCredentialsDto.html":{},"coverage.html":{}}}],["logo",{"_index":377,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["longtext",{"_index":902,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["low",{"_index":1005,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["maj",{"_index":765,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["manager",{"_index":1109,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":998,"title":{},"body":{"classes/TicketEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":988,"title":{},"body":{"classes/TicketEntity.html":{}}}],["manytoone",{"_index":532,"title":{},"body":{"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["manytoone(undefined",{"_index":521,"title":{},"body":{"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{}}}],["matched",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":52,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matricule",{"_index":980,"title":{},"body":{"classes/TicketEntity.html":{}}}],["max",{"_index":45,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/UpdateCvDTO.html":{}}}],["max(65",{"_index":50,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/UpdateCvDTO.html":{}}}],["medium",{"_index":1004,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["meth",{"_index":787,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["method",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":841,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["middleware/logger.middleware",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/middleware",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["min",{"_index":46,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/UpdateCvDTO.html":{}}}],["min(15",{"_index":49,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/UpdateCvDTO.html":{}}}],["mis",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["miscellaneous",{"_index":1236,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1275,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":617,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/ProfileEntity.html":{},"classes/UpdateProfileDto.html":{}}}],["mode",{"_index":1266,"title":{},"body":{"index.html":{}}}],["module",{"_index":78,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":80,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1288,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["mysql",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":1294,"title":{},"body":{"index.html":{}}}],["name",{"_index":16,"title":{},"body":{"classes/AddCvDTO.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateCvDTO.html":{},"injectables/UserService.html":{}}}],["nationality",{"_index":618,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/ProfileEntity.html":{},"classes/UpdateProfileDto.html":{}}}],["nest",{"_index":1218,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":1298,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1054,"title":{},"body":{"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{}}}],["nestjs/passport",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":38,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":837,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["nestmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"classes/TicketEntity.html":{},"injectables/TicketService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["newcurriculum",{"_index":766,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["newcv",{"_index":761,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["newcv.user",{"_index":763,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["newprofile",{"_index":941,"title":{},"body":{"injectables/ProfileService.html":{}}}],["next",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"injectables/FirstMiddleware.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":1245,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":796,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["nombredecv",{"_index":800,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["normal",{"_index":1006,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":461,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/ProfileService.html":{}}}],["notfoundexception('contact",{"_index":589,"title":{},"body":{"injectables/ContactService.html":{}}}],["notfoundexception('this",{"_index":587,"title":{},"body":{"injectables/ContactService.html":{}}}],["notfoundexception(`client",{"_index":572,"title":{},"body":{"injectables/ContactService.html":{}}}],["notfoundexception(`curriculum",{"_index":769,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["notfoundexception(`profile",{"_index":943,"title":{},"body":{"injectables/ProfileService.html":{}}}],["notfoundexception(`this",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":1259,"title":{},"body":{"index.html":{}}}],["nr",{"_index":529,"title":{},"body":{"classes/ContactEntity.html":{}}}],["null",{"_index":911,"title":{},"body":{"classes/ProfileEntity.html":{},"classes/UpdateProfileDto.html":{}}}],["nullable",{"_index":387,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["number",{"_index":20,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/TicketEntity.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateCvDTO.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["object",{"_index":781,"title":{},"body":{"injectables/CurriculumService.html":{},"injectables/UserService.html":{}}}],["object.user",{"_index":1163,"title":{},"body":{"injectables/UserService.html":{}}}],["object.user.id",{"_index":1164,"title":{},"body":{"injectables/UserService.html":{}}}],["onetomany",{"_index":420,"title":{},"body":{"classes/ClientEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["onetomany(undefined",{"_index":391,"title":{},"body":{"classes/ClientEntity.html":{},"classes/UserEntity.html":{}}}],["onetoone",{"_index":1102,"title":{},"body":{"classes/UserEntity.html":{}}}],["onetoone(undefined",{"_index":1092,"title":{},"body":{"classes/UserEntity.html":{}}}],["open",{"_index":1277,"title":{},"body":{"index.html":{}}}],["optional",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["order",{"_index":472,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"classes/TicketEntity.html":{}}}],["orderby('contact.fullname",{"_index":570,"title":{},"body":{"injectables/ContactService.html":{}}}],["orderby('cv.id",{"_index":807,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["out",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1303,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1197,"title":{"dependencies.html":{}},"body":{}}],["par",{"_index":797,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["param",{"_index":342,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{}}}],["param('client_id",{"_index":510,"title":{},"body":{"controllers/ContactController.html":{}}}],["param('contact_id",{"_index":513,"title":{},"body":{"controllers/ContactController.html":{}}}],["param('id",{"_index":365,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{}}}],["parameters",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["parseint(process.env.db_port",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["parseintpipe",{"_index":344,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{}}}],["partial",{"_index":805,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["partialtype",{"_index":1053,"title":{},"body":{"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{}}}],["partialtype(createclientdto",{"_index":1056,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["partialtype(createcontactdto",{"_index":1062,"title":{},"body":{"classes/UpdateContactDto.html":{}}}],["partialtype(createprofiledto",{"_index":1079,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createticketdto",{"_index":1081,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["passport",{"_index":857,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":858,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":859,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/LoginCredentialsDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UserEntity.html":{}}}],["patch",{"_index":345,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{}}}],["patch(':id",{"_index":340,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{}}}],["path",{"_index":17,"title":{},"body":{"classes/AddCvDTO.html":{},"modules/AppModule.html":{},"classes/CurriculumEntity.html":{},"classes/UpdateCvDTO.html":{}}}],["payload",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payloadinterface",{"_index":230,"title":{"interfaces/PayloadInterface.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/PayloadInterface.html":{},"coverage.html":{}}}],["phone",{"_index":520,"title":{},"body":{"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"classes/UpdateContactDto.html":{}}}],["phones",{"_index":378,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["photo",{"_index":619,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/ProfileEntity.html":{},"classes/UpdateProfileDto.html":{}}}],["placed",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["please",{"_index":1286,"title":{},"body":{"index.html":{}}}],["port",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["post('client/:client_id/contact",{"_index":486,"title":{},"body":{"controllers/ContactController.html":{}}}],["post('login",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{},"controllers/UserController.html":{}}}],["prettier/prettier",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["primarygeneratedcolumn",{"_index":415,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["priority",{"_index":981,"title":{},"body":{"classes/TicketEntity.html":{}}}],["priorityticketenum",{"_index":1002,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["priorityticketenum.normal",{"_index":1013,"title":{},"body":{"classes/TicketEntity.html":{}}}],["private",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["process.env.app_secret",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.db_host",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_user",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":1268,"title":{},"body":{"index.html":{}}}],["profile",{"_index":877,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["profile's",{"_index":930,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile.controller",{"_index":923,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":887,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":613,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":1074,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:12",{"_index":626,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:15",{"_index":1076,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:17",{"_index":621,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:20",{"_index":1073,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:22",{"_index":629,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:25",{"_index":1077,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:26",{"_index":627,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:30",{"_index":624,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:34",{"_index":630,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:35",{"_index":1075,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:40",{"_index":1078,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:8",{"_index":622,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.service",{"_index":886,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/entities/profile.entity",{"_index":1103,"title":{},"body":{"classes/UserEntity.html":{}}}],["profile/profile.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":875,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profileentity",{"_index":888,"title":{"classes/ProfileEntity.html":{}},"body":{"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["profilemodule",{"_index":94,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerepository",{"_index":928,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profileservice",{"_index":885,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":1244,"title":{},"body":{"index.html":{}}}],["project",{"_index":1278,"title":{},"body":{"index.html":{}}}],["promise",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AddCvDTO.html":{},"injectables/AuthService.html":{},"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"classes/ProfileEntity.html":{},"classes/RegisterAuthDto.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UserEntity.html":{}}}],["property",{"_index":550,"title":{},"body":{"injectables/ContactService.html":{}}}],["providers",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/ContactController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["put(':id",{"_index":964,"title":{},"body":{"controllers/TicketController.html":{}}}],["put('client/:client_id/contact/:contact_id",{"_index":505,"title":{},"body":{"controllers/ContactController.html":{}}}],["qb",{"_index":793,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["qb.getmany",{"_index":808,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["qb.getrawmany",{"_index":803,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["qb.select(\"cv.job",{"_index":798,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["qb.select('cv.job",{"_index":804,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["qb.where('cv.user",{"_index":806,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["query",{"_index":678,"title":{},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["querybuilder",{"_index":464,"title":{},"body":{"injectables/ClientService.html":{},"injectables/CurriculumService.html":{},"injectables/UserService.html":{}}}],["qui",{"_index":553,"title":{},"body":{"injectables/ContactService.html":{}}}],["read",{"_index":1287,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["recover",{"_index":322,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["recover(id",{"_index":332,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{}}}],["reflect",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(userdata",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerauthdto",{"_index":183,"title":{"classes/RegisterAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterAuthDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["rejected",{"_index":1010,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["relation",{"_index":720,"title":{},"body":{"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["relations",{"_index":1159,"title":{},"body":{"injectables/UserService.html":{}}}],["remove",{"_index":323,"title":{},"body":{"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["remove(@param('id",{"_index":898,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/TicketController.html":{}}}],["remove(client_id",{"_index":500,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["remove(id",{"_index":335,"title":{},"body":{"controllers/ClientController.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["removes",{"_index":1034,"title":{},"body":{"injectables/TicketService.html":{}}}],["repository",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":836,"title":{},"body":{"injectables/FirstMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.ip",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":834,"title":{},"body":{"injectables/FirstMiddleware.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resetcounters",{"_index":699,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["resolved",{"_index":1009,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["response",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["reste",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["restore",{"_index":443,"title":{},"body":{"injectables/ClientService.html":{},"injectables/CurriculumService.html":{}}}],["restore(id",{"_index":454,"title":{},"body":{"injectables/ClientService.html":{},"injectables/CurriculumService.html":{}}}],["result",{"_index":51,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":53,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactService.html":{},"interfaces/PayloadInterface.html":{},"classes/UserEntity.html":{}}}],["role_admin",{"_index":359,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["role_client/contact",{"_index":547,"title":{},"body":{"injectables/ContactService.html":{}}}],["role_customer",{"_index":1112,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["role_engineer",{"_index":1111,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["role_manager",{"_index":361,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["role_super_admin",{"_index":1107,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["role_user",{"_index":1113,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":1106,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":1263,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":934,"title":{},"body":{"injectables/ProfileService.html":{}}}],["salt",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserEntity.html":{}}}],["save",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["save(data",{"_index":1146,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":1249,"title":{},"body":{"index.html":{}}}],["secret",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":864,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":578,"title":{},"body":{"injectables/ContactService.html":{},"injectables/CurriculumService.html":{}}}],["server",{"_index":1250,"title":{},"body":{"index.html":{}}}],["side",{"_index":1251,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["site",{"_index":379,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["sofdelete",{"_index":444,"title":{},"body":{"injectables/ClientService.html":{},"injectables/CurriculumService.html":{}}}],["sofdelete(id",{"_index":457,"title":{},"body":{"injectables/ClientService.html":{},"injectables/CurriculumService.html":{}}}],["soft",{"_index":459,"title":{},"body":{"injectables/ClientService.html":{},"injectables/CurriculumService.html":{}}}],["softdelete([58",{"_index":785,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CinGeneratorService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTicketDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"modules/CurriculumModule.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"modules/HelpersModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":1281,"title":{},"body":{"index.html":{}}}],["src/.../logger.middleware.ts",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ticket.entity.ts",{"_index":1238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.decorator.ts",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:49",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:20",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:27",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:66",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.credentials.dto.ts",{"_index":868,"title":{},"body":{"classes/LoginCredentialsDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.credentials.dto.ts:13",{"_index":870,"title":{},"body":{"classes/LoginCredentialsDto.html":{}}}],["src/auth/dto/login.credentials.dto.ts:9",{"_index":871,"title":{},"body":{"classes/LoginCredentialsDto.html":{}}}],["src/auth/dto/register.auth.dto",{"_index":1150,"title":{},"body":{"injectables/UserService.html":{}}}],["src/auth/dto/register.auth.dto.ts",{"_index":950,"title":{},"body":{"classes/RegisterAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.auth.dto.ts:14",{"_index":952,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["src/auth/dto/register.auth.dto.ts:19",{"_index":954,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["src/auth/dto/register.auth.dto.ts:9",{"_index":955,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["src/auth/guards/jwt",{"_index":347,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/auth/interface/payload.interface.ts",{"_index":874,"title":{},"body":{"interfaces/PayloadInterface.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":850,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":853,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:22",{"_index":855,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/client/client.controller.ts",{"_index":318,"title":{},"body":{"controllers/ClientController.html":{},"coverage.html":{}}}],["src/client/client.controller.ts:27",{"_index":327,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:36",{"_index":328,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:41",{"_index":331,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:46",{"_index":341,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:56",{"_index":337,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.controller.ts:65",{"_index":334,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/client/client.module.ts",{"_index":435,"title":{},"body":{"modules/ClientModule.html":{}}}],["src/client/client.service.ts",{"_index":442,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/client/client.service.ts:10",{"_index":446,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:22",{"_index":449,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:34",{"_index":450,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:42",{"_index":452,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:55",{"_index":460,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:72",{"_index":458,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/client.service.ts:88",{"_index":455,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/client/contact.controller.ts",{"_index":481,"title":{},"body":{"controllers/ContactController.html":{},"coverage.html":{}}}],["src/client/contact.controller.ts:28",{"_index":490,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/client/contact.controller.ts:33",{"_index":492,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/client/contact.controller.ts:38",{"_index":495,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/client/contact.controller.ts:46",{"_index":487,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/client/contact.controller.ts:55",{"_index":499,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/client/contact.controller.ts:63",{"_index":506,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/client/contact.controller.ts:76",{"_index":502,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/client/contact.service.ts",{"_index":536,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/client/contact.service.ts:101",{"_index":561,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/client/contact.service.ts:126",{"_index":563,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/client/contact.service.ts:13",{"_index":540,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/client/contact.service.ts:139",{"_index":562,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/client/contact.service.ts:26",{"_index":545,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/client/contact.service.ts:41",{"_index":543,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/client/contact.service.ts:62",{"_index":552,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/client/contact.service.ts:79",{"_index":548,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/client/dto/create",{"_index":591,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"coverage.html":{}}}],["src/client/dto/update",{"_index":1042,"title":{},"body":{"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"coverage.html":{}}}],["src/client/entities/client.entity",{"_index":1000,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/client/entities/client.entity.ts",{"_index":369,"title":{},"body":{"classes/ClientEntity.html":{},"coverage.html":{}}}],["src/client/entities/client.entity.ts:12",{"_index":407,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/client.entity.ts:15",{"_index":403,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/client.entity.ts:18",{"_index":401,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/client.entity.ts:21",{"_index":406,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/client.entity.ts:24",{"_index":398,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/client.entity.ts:27",{"_index":405,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/client.entity.ts:35",{"_index":395,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/client.entity.ts:41",{"_index":409,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/client.entity.ts:9",{"_index":389,"title":{},"body":{"classes/ClientEntity.html":{}}}],["src/client/entities/contact.entity.ts",{"_index":517,"title":{},"body":{"classes/ContactEntity.html":{},"coverage.html":{}}}],["src/client/entities/contact.entity.ts:10",{"_index":525,"title":{},"body":{"classes/ContactEntity.html":{}}}],["src/client/entities/contact.entity.ts:13",{"_index":530,"title":{},"body":{"classes/ContactEntity.html":{}}}],["src/client/entities/contact.entity.ts:16",{"_index":531,"title":{},"body":{"classes/ContactEntity.html":{}}}],["src/client/entities/contact.entity.ts:19",{"_index":524,"title":{},"body":{"classes/ContactEntity.html":{}}}],["src/client/entities/contact.entity.ts:22",{"_index":523,"title":{},"body":{"classes/ContactEntity.html":{}}}],["src/client/entities/contact.entity.ts:27",{"_index":522,"title":{},"body":{"classes/ContactEntity.html":{}}}],["src/client/entities/contact.entity.ts:7",{"_index":526,"title":{},"body":{"classes/ContactEntity.html":{}}}],["src/curriculum/curriculum.controller.ts",{"_index":635,"title":{},"body":{"controllers/CurriculumController.html":{},"coverage.html":{}}}],["src/curriculum/curriculum.controller.ts:17",{"_index":649,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.controller.ts:26",{"_index":640,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.controller.ts:35",{"_index":655,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.controller.ts:42",{"_index":661,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.controller.ts:49",{"_index":646,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.controller.ts:59",{"_index":658,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.controller.ts:69",{"_index":653,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.controller.ts:80",{"_index":643,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.controller.ts:90",{"_index":651,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["src/curriculum/curriculum.module.ts",{"_index":726,"title":{},"body":{"modules/CurriculumModule.html":{}}}],["src/curriculum/curriculum.service.ts",{"_index":731,"title":{},"body":{"injectables/CurriculumService.html":{},"coverage.html":{}}}],["src/curriculum/curriculum.service.ts:104",{"_index":746,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:11",{"_index":736,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:119",{"_index":754,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:19",{"_index":744,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:34",{"_index":742,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:39",{"_index":739,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:47",{"_index":750,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:64",{"_index":752,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:69",{"_index":747,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:75",{"_index":741,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:80",{"_index":749,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/curriculum.service.ts:86",{"_index":748,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["src/curriculum/dto/add",{"_index":6,"title":{},"body":{"classes/AddCvDTO.html":{},"coverage.html":{}}}],["src/curriculum/dto/update",{"_index":1063,"title":{},"body":{"classes/UpdateCvDTO.html":{},"coverage.html":{}}}],["src/curriculum/entities/curriculum.entity",{"_index":1101,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts",{"_index":697,"title":{},"body":{"classes/CurriculumEntity.html":{},"coverage.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:11",{"_index":704,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:14",{"_index":700,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:17",{"_index":702,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:20",{"_index":707,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:23",{"_index":710,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:26",{"_index":706,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:28",{"_index":703,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:31",{"_index":713,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:42",{"_index":711,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/entities/curriculum.entity.ts:8",{"_index":709,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["src/curriculum/subscribers/curriculum.subscriber.ts",{"_index":809,"title":{},"body":{"classes/CurriculumSubscriber.html":{},"coverage.html":{}}}],["src/curriculum/subscribers/curriculum.subscriber.ts:14",{"_index":816,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["src/curriculum/subscribers/curriculum.subscriber.ts:21",{"_index":821,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["src/curriculum/subscribers/curriculum.subscriber.ts:25",{"_index":819,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["src/decorators/user.decorator",{"_index":349,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/ProfileController.html":{}}}],["src/decorators/user.decorator.ts",{"_index":1188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generics/timestamp.entity",{"_index":421,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["src/generics/timestamp.entity.ts",{"_index":1035,"title":{},"body":{"classes/TimestampEntity.html":{},"coverage.html":{}}}],["src/generics/timestamp.entity.ts:10",{"_index":1038,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["src/generics/timestamp.entity.ts:15",{"_index":1036,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["src/generics/timestamp.entity.ts:20",{"_index":1039,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["src/generics/timestamp.entity.ts:23",{"_index":1037,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["src/helpers/cin",{"_index":309,"title":{},"body":{"injectables/CinGeneratorService.html":{},"coverage.html":{}}}],["src/helpers/helpers.module.ts",{"_index":845,"title":{},"body":{"modules/HelpersModule.html":{}}}],["src/main.ts",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/logger.middleware.ts",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middleware/middleware.ts",{"_index":832,"title":{},"body":{"injectables/FirstMiddleware.html":{},"coverage.html":{}}}],["src/middleware/middleware.ts:5",{"_index":835,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["src/profile/dto/create",{"_index":612,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":1072,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts",{"_index":900,"title":{},"body":{"classes/ProfileEntity.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts:10",{"_index":904,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/entities/profile.entity.ts:13",{"_index":908,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/entities/profile.entity.ts:16",{"_index":903,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/entities/profile.entity.ts:19",{"_index":910,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/entities/profile.entity.ts:22",{"_index":909,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/entities/profile.entity.ts:25",{"_index":906,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/entities/profile.entity.ts:28",{"_index":912,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/entities/profile.entity.ts:31",{"_index":914,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/entities/profile.entity.ts:7",{"_index":907,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["src/profile/profile.controller.ts",{"_index":876,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:17",{"_index":878,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:23",{"_index":880,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:29",{"_index":882,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:35",{"_index":884,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":922,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":925,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:11",{"_index":927,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:23",{"_index":929,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:33",{"_index":931,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:42",{"_index":932,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:56",{"_index":933,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/ticket/dto/create",{"_index":632,"title":{},"body":{"classes/CreateTicketDto.html":{},"coverage.html":{}}}],["src/ticket/dto/update",{"_index":1080,"title":{},"body":{"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["src/ticket/entities/ticket.entity",{"_index":423,"title":{},"body":{"classes/ClientEntity.html":{},"classes/UserEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts",{"_index":976,"title":{},"body":{"classes/TicketEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/ticket/entities/ticket.entity.ts:24",{"_index":990,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:27",{"_index":991,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:33",{"_index":992,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:36",{"_index":994,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:39",{"_index":995,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:42",{"_index":996,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:45",{"_index":987,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:48",{"_index":985,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:58",{"_index":984,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:64",{"_index":986,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/entities/ticket.entity.ts:68",{"_index":989,"title":{},"body":{"classes/TicketEntity.html":{}}}],["src/ticket/ticket.controller.ts",{"_index":957,"title":{},"body":{"controllers/TicketController.html":{},"coverage.html":{}}}],["src/ticket/ticket.controller.ts:11",{"_index":959,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:16",{"_index":960,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:21",{"_index":961,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:26",{"_index":965,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:31",{"_index":962,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.module.ts",{"_index":1021,"title":{},"body":{"modules/TicketModule.html":{}}}],["src/ticket/ticket.service.ts",{"_index":1025,"title":{},"body":{"injectables/TicketService.html":{},"coverage.html":{}}}],["src/ticket/ticket.service.ts:11",{"_index":1027,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:15",{"_index":1028,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:19",{"_index":1030,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:23",{"_index":1029,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:7",{"_index":1026,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/user/entities/user.entity",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TicketEntity.html":{}}}],["src/user/entities/user.entity.ts",{"_index":1085,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/user/entities/user.entity.ts:21",{"_index":1098,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:24",{"_index":1089,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:28",{"_index":1091,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:32",{"_index":1096,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:39",{"_index":1095,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:43",{"_index":1100,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:51",{"_index":1094,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:56",{"_index":1088,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:62",{"_index":1097,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.controller.ts",{"_index":1083,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.module",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{}}}],["src/user/user.module.ts",{"_index":1121,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/ProfileService.html":{}}}],["src/user/user.service.ts",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:22",{"_index":1147,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":1149,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:31",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:35",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:39",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":1145,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:53",{"_index":1143,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["sse",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["stagiaire",{"_index":782,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["start",{"_index":1264,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1267,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1269,"title":{},"body":{"index.html":{}}}],["started",{"_index":1243,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1257,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["statscvnumberbyage",{"_index":637,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["status",{"_index":982,"title":{},"body":{"classes/TicketEntity.html":{}}}],["statusticketenum",{"_index":1007,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusticketenum.new",{"_index":1014,"title":{},"body":{"classes/TicketEntity.html":{}}}],["stay",{"_index":1290,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":25,"title":{},"body":{"classes/AddCvDTO.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/CurriculumEntity.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"classes/ProfileEntity.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"injectables/TicketService.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":983,"title":{},"body":{"classes/TicketEntity.html":{}}}],["subscribers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["subscribers/curriculum.subscriber",{"_index":729,"title":{},"body":{"modules/CurriculumModule.html":{}}}],["suis",{"_index":839,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["super",{"_index":860,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1282,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1301,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":768,"title":{},"body":{"injectables/CurriculumService.html":{},"index.html":{}}}],["test:covsupport",{"_index":1274,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1273,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1271,"title":{},"body":{"index.html":{}}}],["text",{"_index":404,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{}}}],["thanks",{"_index":1280,"title":{},"body":{"index.html":{}}}],["this._sign(payload",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.login(data",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload.username",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.cingenerator",{"_index":826,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["this.cingenerator.handle",{"_index":831,"title":{},"body":{"classes/CurriculumSubscriber.html":{}}}],["this.clientrepository",{"_index":477,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.create(data",{"_index":469,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.find",{"_index":471,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.findone(client_id",{"_index":586,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.clientrepository.findone(id",{"_index":474,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{}}}],["this.clientrepository.preload",{"_index":475,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.restore(id",{"_index":480,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.save(client",{"_index":470,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.softdelete(id",{"_index":476,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientservice.create(createclientdto",{"_index":360,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.findall",{"_index":362,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.findone(id",{"_index":364,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.restore(id",{"_index":368,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.sofdelete(id",{"_index":367,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.update(id",{"_index":366,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.configservice.get('app_port",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["this.contactrepository",{"_index":567,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.create(data",{"_index":574,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.find",{"_index":576,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.preload",{"_index":588,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.remove(contact",{"_index":590,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.save(contact",{"_index":575,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactservice.create(client_id",{"_index":512,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.findall",{"_index":508,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.findone(id",{"_index":509,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getall(client_id",{"_index":511,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getone(client_id",{"_index":514,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.remove(client_id",{"_index":516,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.update",{"_index":515,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.counters",{"_index":717,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["this.curriculumrepository.create(addcvdto",{"_index":762,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.createquerybuilder('cv",{"_index":794,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.delete(criteria",{"_index":783,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.find",{"_index":760,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.findone(_id",{"_index":758,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.preload",{"_index":767,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.query",{"_index":788,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.remove(cvtoremove",{"_index":777,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.restore(curriculum.id",{"_index":790,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.save(newcurriculum",{"_index":772,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.save(newcv",{"_index":764,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.softdelete(curriculum.id",{"_index":784,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumrepository.update(criteria",{"_index":773,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.curriculumservice.add(data",{"_index":676,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.delete(id",{"_index":694,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.findall",{"_index":674,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.findbyid(id",{"_index":684,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.getownerall(user",{"_index":675,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.groupcvnumberbyage",{"_index":680,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.remove(id",{"_index":686,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.restore(id",{"_index":696,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.sofdelete(id",{"_index":695,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.softremove(id",{"_index":687,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.update(id",{"_index":685,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.curriculumservice.updatebycriteria(criteria",{"_index":683,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["this.findbyid(id",{"_index":776,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.firstname",{"_index":917,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["this.jwtservice.sign(payload",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastname",{"_index":918,"title":{},"body":{"classes/ProfileEntity.html":{}}}],["this.profilerepository.create(data",{"_index":936,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilerepository.delete(id",{"_index":949,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilerepository.preload",{"_index":942,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilerepository.save(newprofile",{"_index":948,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profileservice.create(data",{"_index":892,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findall",{"_index":894,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findone(id",{"_index":896,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.remove(id",{"_index":899,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.update(id",{"_index":897,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.ticketservice.create(createticketdto",{"_index":970,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findall",{"_index":971,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findone(+id",{"_index":972,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.remove(+id",{"_index":975,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.update(+id",{"_index":974,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.userrepository",{"_index":1160,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.create",{"_index":1152,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":1157,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":1153,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(data",{"_index":1158,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.preload(data",{"_index":1155,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(data",{"_index":1154,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":1156,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createentity(userdata",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findallwithprofile",{"_index":939,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userservice.findbyusername(username",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findone(id",{"_index":940,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userservice.findone(user.id",{"_index":945,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userservice.isowneroradmin(curriculum",{"_index":759,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.userservice.isowneroradmin(newcurriculum",{"_index":771,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["this.userservice.save(user",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(user",{"_index":938,"title":{},"body":{"injectables/ProfileService.html":{}}}],["throw",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["thx",{"_index":168,"title":{},"body":{"injectables/AppService.html":{}}}],["ticket",{"_index":429,"title":{},"body":{"classes/ClientEntity.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UserEntity.html":{}}}],["ticket.assignto",{"_index":1117,"title":{},"body":{"classes/UserEntity.html":{}}}],["ticket.controller",{"_index":1022,"title":{},"body":{"modules/TicketModule.html":{}}}],["ticket.customer",{"_index":430,"title":{},"body":{"classes/ClientEntity.html":{}}}],["ticket.dto",{"_index":968,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts",{"_index":633,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["ticket.service",{"_index":967,"title":{},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{}}}],["ticket/ticket.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["ticketcontroller",{"_index":956,"title":{"controllers/TicketController.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"coverage.html":{}}}],["ticketentity",{"_index":408,"title":{"classes/TicketEntity.html":{}},"body":{"classes/ClientEntity.html":{},"classes/TicketEntity.html":{},"modules/TicketModule.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["ticketmodule",{"_index":95,"title":{"modules/TicketModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TicketModule.html":{},"modules.html":{},"overview.html":{}}}],["tickets",{"_index":380,"title":{},"body":{"classes/ClientEntity.html":{},"classes/UserEntity.html":{}}}],["ticketservice",{"_index":966,"title":{"injectables/TicketService.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"coverage.html":{},"overview.html":{}}}],["timestampentity",{"_index":371,"title":{"classes/TimestampEntity.html":{}},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["timestampentity:10",{"_index":416,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["timestampentity:15",{"_index":412,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["timestampentity:20",{"_index":418,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["timestampentity:23",{"_index":414,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["touch",{"_index":1291,"title":{},"body":{"index.html":{}}}],["tous",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":39,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/ProfileEntity.html":{},"classes/RegisterAuthDto.html":{},"classes/TicketEntity.html":{},"classes/UpdateCvDTO.html":{},"classes/UserEntity.html":{},"dependencies.html":{}}}],["true",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/ProfileEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["true})@isdatestring",{"_index":1099,"title":{},"body":{"classes/UserEntity.html":{}}}],["true})@joincolumn",{"_index":1093,"title":{},"body":{"classes/UserEntity.html":{}}}],["try",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":1297,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddCvDTO.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"injectables/FirstMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"controllers/ProfileController.html":{},"classes/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/RegisterAuthDto.html":{},"controllers/TicketController.html":{},"classes/TicketEntity.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typeorm",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"classes/ClientEntity.html":{},"injectables/ClientService.html":{},"classes/ContactEntity.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"classes/CurriculumSubscriber.html":{},"classes/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([cliententity",{"_index":441,"title":{},"body":{"modules/ClientModule.html":{}}}],["typeormmodule.forfeature([curriculumentity",{"_index":730,"title":{},"body":{"modules/CurriculumModule.html":{}}}],["typeormmodule.forfeature([profileentity",{"_index":924,"title":{},"body":{"modules/ProfileModule.html":{}}}],["typeormmodule.forfeature([ticketentity",{"_index":1024,"title":{},"body":{"modules/TicketModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1055,"title":{},"body":{"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateTicketDto.html":{}}}],["types/morgan",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1256,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":792,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["unauthorizedexception",{"_index":462,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["undefined",{"_index":392,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["unique",{"_index":386,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{}}}],["unit",{"_index":1270,"title":{},"body":{"index.html":{}}}],["update",{"_index":324,"title":{},"body":{"controllers/ClientController.html":{},"classes/ClientEntity.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/TimestampEntity.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":973,"title":{},"body":{"controllers/TicketController.html":{}}}],["update(client_id",{"_index":503,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["update(data",{"_index":1148,"title":{},"body":{"injectables/UserService.html":{}}}],["update(id",{"_index":338,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["updatebycriteria",{"_index":638,"title":{},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["updatebycriteria(@body",{"_index":682,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["updatebycriteria(criteria",{"_index":751,"title":{},"body":{"injectables/CurriculumService.html":{}}}],["updatebycriteria(data",{"_index":659,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["updateclientdto",{"_index":339,"title":{"classes/UpdateClientDto.html":{}},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["updatecontactdto",{"_index":504,"title":{"classes/UpdateContactDto.html":{}},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/UpdateContactDto.html":{},"coverage.html":{}}}],["updatecvdto",{"_index":656,"title":{"classes/UpdateCvDTO.html":{}},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{},"classes/UpdateCvDTO.html":{},"coverage.html":{}}}],["updated_at",{"_index":383,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["updatedatecolumn",{"_index":1041,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["updatedatecolumn({nullable",{"_index":417,"title":{},"body":{"classes/ClientEntity.html":{},"classes/CurriculumEntity.html":{},"classes/TicketEntity.html":{},"classes/TimestampEntity.html":{},"classes/UserEntity.html":{}}}],["updateprofiledto",{"_index":883,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updates",{"_index":1033,"title":{},"body":{"injectables/TicketService.html":{}}}],["updateticketdto",{"_index":963,"title":{"classes/UpdateTicketDto.html":{}},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["use",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"controllers/CurriculumController.html":{},"injectables/FirstMiddleware.html":{}}}],["use(req",{"_index":833,"title":{},"body":{"injectables/FirstMiddleware.html":{}}}],["useguards",{"_index":343,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{}}}],["useguards(jwtauthguard",{"_index":357,"title":{},"body":{"controllers/ClientController.html":{},"controllers/ContactController.html":{},"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{}}}],["useguards(jwtauthguard)@delete(':id",{"_index":652,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["useguards(jwtauthguard)@delete('delete/:id",{"_index":642,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":648,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["useguards(jwtauthguard)@get(':id",{"_index":645,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["useguards(jwtauthguard)@get('restore/:id",{"_index":650,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["useguards(jwtauthguard)@get('user/:id",{"_index":881,"title":{},"body":{"controllers/ProfileController.html":{}}}],["useguards(jwtauthguard)@get('users",{"_index":879,"title":{},"body":{"controllers/ProfileController.html":{}}}],["useguards(jwtauthguard)@patch",{"_index":660,"title":{},"body":{"controllers/CurriculumController.html":{}}}],["useguards(jwtauthguard)@patch(':id",{"_index":657,"title":{},"body":{"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{}}}],["useguards(jwtauthguard)@post",{"_index":639,"title":{},"body":{"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{}}}],["useinterceptors",{"_index":663,"title":{},"body":{"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":671,"title":{},"body":{"controllers/CurriculumController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TicketEntity.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":1123,"title":{},"body":{"modules/UserModule.html":{}}}],["user.curriculums",{"_index":721,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["user.email",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurriculumService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.profile",{"_index":937,"title":{},"body":{"injectables/ProfileService.html":{}}}],["user.role",{"_index":466,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["user.salt",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":1124,"title":{},"body":{"modules/UserModule.html":{}}}],["user.tickets",{"_index":1016,"title":{},"body":{"classes/TicketEntity.html":{}}}],["user.username",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/entities/user.entity",{"_index":715,"title":{},"body":{"classes/CurriculumEntity.html":{}}}],["user/user.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["user[data",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":1082,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userentity",{"_index":189,"title":{"classes/UserEntity.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"classes/CurriculumEntity.html":{},"injectables/CurriculumService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TicketEntity.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodule",{"_index":96,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/LoginCredentialsDto.html":{},"interfaces/PayloadInterface.html":{},"classes/RegisterAuthDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{}}}],["userrole",{"_index":463,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/ProfileService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":467,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"controllers/CurriculumController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["userrole.manager",{"_index":468,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["userrole.user",{"_index":1115,"title":{},"body":{"classes/UserEntity.html":{}}}],["users",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProfileService.html":{}}}],["userservice",{"_index":227,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ContactService.html":{},"injectables/CurriculumService.html":{},"injectables/ProfileService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithprofile",{"_index":944,"title":{},"body":{"injectables/ProfileService.html":{}}}],["userwithprofile.profile",{"_index":946,"title":{},"body":{"injectables/ProfileService.html":{}}}],["userwithprofile.profile.id",{"_index":947,"title":{},"body":{"injectables/ProfileService.html":{}}}],["using",{"_index":677,"title":{},"body":{"controllers/CurriculumController.html":{},"injectables/CurriculumService.html":{}}}],["validate",{"_index":851,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":854,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated_at",{"_index":1087,"title":{},"body":{"classes/UserEntity.html":{}}}],["validateuser",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":47,"title":{},"body":{"classes/AddCvDTO.html":{},"classes/CreateClientDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateProfileDto.html":{},"classes/LoginCredentialsDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateContactDto.html":{},"classes/UpdateCvDTO.html":{},"classes/UpdateProfileDto.html":{},"classes/UserEntity.html":{},"dependencies.html":{}}}],["value",{"_index":753,"title":{},"body":{"injectables/CurriculumService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":397,"title":{},"body":{"classes/ClientEntity.html":{},"classes/ContactEntity.html":{},"classes/TicketEntity.html":{}}}],["variable",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1307,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":714,"title":{},"body":{"classes/CurriculumEntity.html":{},"injectables/FirstMiddleware.html":{}}}],["voir",{"_index":557,"title":{},"body":{"injectables/ContactService.html":{}}}],["waiting",{"_index":1008,"title":{},"body":{"classes/TicketEntity.html":{},"miscellaneous/enumerations.html":{}}}],["watch",{"_index":1265,"title":{},"body":{"index.html":{}}}],["website",{"_index":1295,"title":{},"body":{"index.html":{}}}],["where('client.id",{"_index":479,"title":{},"body":{"injectables/ClientService.html":{}}}],["where('contact.id",{"_index":581,"title":{},"body":{"injectables/ContactService.html":{}}}],["you'd",{"_index":1285,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CurriculumModule.html":{},"modules/HelpersModule.html":{},"modules/ProfileModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddCvDTO.html":{"url":"classes/AddCvDTO.html","title":"class - AddCvDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddCvDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/curriculum/dto/Add-cv-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                cin\n                            \n                            \n                                firstname\n                            \n                            \n                                isActive\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@Type(undefined)@IsNumber()@Min(15)@Max(65)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Add-cv-dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Add-cv-dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Add-cv-dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsBoolean()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Add-cv-dto.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Add-cv-dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Add-cv-dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Add-cv-dto.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsBoolean, IsNotEmpty, IsNumber, IsOptional, IsString, Max, Min } from \"class-validator\";\n\nexport class AddCvDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(15)\n  @Max(65)\n  age: number;\n\n  @ApiProperty()\n  //@IsNotEmpty()\n  //@IsString()\n  cin: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  job: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  path: string;\n\n  @ApiProperty()\n  @IsBoolean()\n  @IsOptional()\n  isActive: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Delete, Put, Body } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get()\n  index(): string {\n    console.log('PORT:', this.configService.get('APP_PORT'));\n    return 'Hello God';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nCurriculumModule\n\nCurriculumModule\n\nAppModule -->\n\nCurriculumModule->AppModule\n\n\n\n\n\nHelpersModule\n\nHelpersModule\n\nAppModule -->\n\nHelpersModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ClientModule\n                        \n                        \n                            CurriculumModule\n                        \n                        \n                            HelpersModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            TicketModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { HelpersModule } from './helpers/helpers.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { FirstMiddleware } from './middleware/middleware';\nimport { logger } from './middleware/logger.middleware';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CurriculumModule } from './curriculum/curriculum.module';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ClientModule } from './client/client.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { TicketModule } from './ticket/ticket.module';\n\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\n\n@Module({\n  imports: [\n    HelpersModule,\n    AuthModule,\n    CurriculumModule,\n    UserModule,\n    ProfileModule,\n    ClientModule,\n\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST,\n      port: parseInt(process.env.DB_PORT),\n      username: process.env.DB_USER,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      entities: ['dist/**/*.entity{.ts,.js}'],\n      //subscribers: ['dist/**/*.subscriber{.ts,.js}'],\n      synchronize: true, //Don't use it in Prod\n    }),\n    TicketModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): any {\n    consumer\n      // eslint-disable-next-line prettier/prettier\n      .apply(FirstMiddleware)\n      .forRoutes({ path: 'users', method: RequestMethod.GET })\n      // eslint-disable-next-line prettier/prettier\n      .apply(logger)\n      .forRoutes('');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Thx God!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginCredentialsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { LoginCredentialsDto } from '../auth/dto/login.credentials.dto';\nimport { AuthService } from './auth.service';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { RegisterAuthDto } from './dto/register.auth.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('register')\n  async register(@Body() data: RegisterAuthDto): Promise> {\n    return await this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: LoginCredentialsDto): Promise {\n    return await this.authService.login(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { AuthController } from './auth.controller';\n\nimport * as dotenv from 'dotenv';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from 'src/user/entities/user.entity';\ndotenv.config();\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    UserModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.APP_SECRET,\n      signOptions: { expiresIn: '3600s' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                _sign\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            _sign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _sign(payload: PayloadInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PayloadInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: LoginCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(userData: RegisterAuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n                    user it in jwt strategy \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport * as bcrypt from 'bcrypt';\nimport { LoginCredentialsDto } from '../auth/dto/login.credentials.dto';\nimport { PayloadInterface } from './interface/payload.interface';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { UserService } from 'src/user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { RegisterAuthDto } from './dto/register.auth.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private userService: UserService,\n  ) {}\n\n  /** */\n  async _sign(payload: PayloadInterface): Promise {\n    const jwt = await this.jwtService.sign(payload);\n    return { access_token: jwt };\n  }\n\n  /** user it in jwt strategy */\n  async validateUser(username: string): Promise> {\n    const user = await this.userService.findByUsername(username);\n    //if user exist return it . It's automatically placed in request\n    if (user) {\n      /*delete user.password;\n      delete user.salt*/\n      const { password, salt, ...result } = user; //tous le reste des properties est mis dans result.\n      return result;\n    }\n  }\n\n  //REGISTER USER\n  async register(userData: RegisterAuthDto): Promise> {\n    // create new user entity\n    const user = await this.userService.createEntity(userData);\n    console.log(user);\n    user.salt = await bcrypt.genSalt();\n    user.password = await bcrypt.hash(user.password, user.salt);\n    // save user entity in database\n    try {\n      await this.userService.save(user);\n    } catch (error) {\n      throw new ConflictException(error.message);\n    }\n    // customize response to hide salt and password\n    return {\n      id: user.id,\n      username: user.username,\n      email: user.email,\n    };\n  }\n\n  //LOGIN USER\n  async login(credentials: LoginCredentialsDto): Promise {\n    const { username, password } = credentials;\n\n    const user = await this.userService.findByUsername(username);\n    //console.log(user);\n    //check if user exist in database\n    if (!user) {\n      //throw new NotFoundException(`this user doesn't exist`);\n      throw new BadRequestException('username or password is incorrect');\n    }\n    //if user exist , crypt his password\n    const hashedPassword = await bcrypt.hash(password, user.salt);\n    //check if password has been hashed.\n    if (!hashedPassword) {\n      throw new InternalServerErrorException();\n    }\n    //check is password is matched\n    if (hashedPassword !== user.password) {\n      throw new BadRequestException('username or password is incorrect');\n    } else {\n      const { id, username, role, email } = user; //destructuring\n      const payload = { id, username, email, role }; //Assignation\n\n      console.log(payload);\n      return await this._sign(payload);\n\n      /*  const jwt = await this.jwtService.sign(payload);\n      return { access_token: jwt }; */\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CinGeneratorService.html":{"url":"injectables/CinGeneratorService.html","title":"injectable - CinGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CinGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helpers/cin-generator/cin-generator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handle()\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/cin-generator/cin-generator.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CinGeneratorService {\n  async handle() {\n    const d = new Date();\n    const data = `CASL${d.getMonth()}${d.getUTCFullYear()}${d.getSeconds()}`;\n\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientController.html":{"url":"controllers/ClientController.html","title":"controller - ClientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/client.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                client\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                recover\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(CreateClientDto: CreateClientDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    CreateClientDto\n                                    \n                                                CreateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            recover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recover(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('restore/:id')\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateClientDto: UpdateClientDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/client/client.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateClientDto\n                                    \n                                                UpdateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  UseGuards,\n  ParseIntPipe,\n  Patch,\n} from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { User } from 'src/decorators/user.decorator';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { ClientService } from './client.service';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport { ClientEntity } from './entities/client.entity';\n\n@UseGuards(JwtAuthGuard)\n@Controller('client')\nexport class ClientController {\n  constructor(private readonly clientService: ClientService) {}\n\n  @Post()\n  //role_admin\n  async create(\n    @Body() CreateClientDto: CreateClientDto,\n    @User() user: UserEntity,\n  ): Promise {\n    return await this.clientService.create(CreateClientDto, user);\n  }\n\n  @Get()\n  //role_admin &&   //role_manager\n  async findAll(): Promise {\n    return await this.clientService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id', ParseIntPipe) id: number) {\n    return await this.clientService.findOne(id);\n  }\n\n  @Patch(':id')\n  async update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateClientDto: UpdateClientDto,\n    @User() user: UserEntity,\n  ) {\n    return await this.clientService.update(id, updateClientDto, user);\n  }\n\n  @Delete(':id')\n  //role_admin &&   //role_manager\n  async remove(\n    @Param('id', ParseIntPipe) id: number,\n    @User() user: UserEntity,\n  ) {\n    return await this.clientService.sofDelete(id, user);\n  }\n\n  @Get('restore/:id')\n  //role_admin &&   //role_manager\n  async recover(\n    @Param('id', ParseIntPipe) id: number,\n    @User() user: UserEntity,\n  ): Promise {\n    return await this.clientService.restore(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientEntity.html":{"url":"classes/ClientEntity.html","title":"class - ClientEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/entities/client.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TimestampEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                contacts\n                            \n                            \n                                description\n                            \n                            \n                                emails\n                            \n                            \n                                link_util\n                            \n                            \n                                logo\n                            \n                            \n                                phones\n                            \n                            \n                                site\n                            \n                            \n                                tickets\n                            \n                            \n                                created_at\n                            \n                            \n                                delete_at\n                            \n                            \n                                id\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contacts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContactEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true, nullable: true, cascade: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('simple-array', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link_util\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phones\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('simple-array', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tickets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TicketEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/client.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({update: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:20\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, OneToMany } from 'typeorm';\nimport { TimestampEntity } from 'src/generics/timestamp.entity';\nimport { ContactEntity } from './contact.entity';\nimport { TicketEntity } from 'src/ticket/entities/ticket.entity';\n\n@Entity('client')\nexport class ClientEntity extends TimestampEntity {\n  @Column({ length: 255, unique: true, nullable: false })\n  company: string;\n\n  @Column({ nullable: true })\n  site: string;\n\n  @Column({ nullable: true })\n  link_util: string;\n\n  @Column('simple-array', { nullable: true })\n  emails: string[];\n\n  @Column('simple-array', { nullable: true })\n  phones: string[];\n\n  @Column({ type: 'varchar', nullable: false })\n  description: string;\n\n  @Column({ type: 'text', nullable: true })\n  logo: string;\n\n  @OneToMany(() => ContactEntity, (contact) => contact.client, {\n    eager: true,\n    nullable: true,\n    cascade: ['update', 'remove'],\n    //lazy: true,\n  })\n  contacts: ContactEntity[];\n\n  @OneToMany(() => TicketEntity, (ticket) => ticket.customer, {\n    //eager: true,\n    nullable: true,\n  })\n  tickets: TicketEntity[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientModule.html":{"url":"modules/ClientModule.html","title":"module - ClientModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_ClientModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nUserModule->ClientModule\n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\nContactService\n\nContactService\n\nClientModule -->\n\nContactService->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/client.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientService\n                        \n                        \n                            ContactService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientController\n                        \n                        \n                            ContactController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientService } from './client.service';\nimport { ClientController } from './client.controller';\nimport { ContactController } from './contact.controller';\nimport { ClientEntity } from './entities/client.entity';\nimport { ContactEntity } from './entities/contact.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ContactService } from './contact.service';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ClientEntity, ContactEntity]),\n    UserModule,\n  ],\n  controllers: [ClientController, ContactController],\n  providers: [ClientService, ContactService],\n})\nexport class ClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/client.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                restore\n                            \n                            \n                                    Async\n                                sofDelete\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/client/client.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateClientDto, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:22\n                \n            \n\n\n            \n                \n                    create user\nrole_admin and role_manager\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:34\n                \n            \n\n\n            \n                \n                    get all clients\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:42\n                \n            \n\n\n            \n                \n                    find client by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restore(id: number, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:88\n                \n            \n\n\n            \n                \n                    restore client deleted\nrole_admin or role_manager\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sofDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sofDelete(id: number, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:72\n                \n            \n\n\n            \n                \n                    soft delete client\nrole_admin or role_manager\ncan do it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateClientDto, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/client/client.service.ts:55\n                \n            \n\n\n            \n                \n                    update client\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateClientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity, UserRole } from 'src/user/entities/user.entity';\nimport { Repository, QueryBuilder } from 'typeorm';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport { ClientEntity } from './entities/client.entity';\n\n@Injectable()\nexport class ClientService {\n  constructor(\n    @InjectRepository(ClientEntity)\n    private clientRepository: Repository,\n  ) {}\n\n  /**\n   * create user\n   * role_admin and role_manager\n   * @param data\n   * @param user\n   */\n  async create(data: CreateClientDto, user: UserEntity) {\n    if (user.role === UserRole.ADMIN || UserRole.MANAGER) {\n      const client = this.clientRepository.create(data);\n      return await this.clientRepository.save(client);\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n\n  /**\n   * get all clients\n   */\n  async findAll() {\n    return await this.clientRepository.find({ order: { id: 'DESC' } });\n  }\n\n  /**\n   * find client by id\n   * @param id\n   */\n  async findOne(id: number): Promise {\n    const client = await this.clientRepository.findOne(id);\n    if (!client) {\n      throw new NotFoundException();\n    }\n    return client;\n  }\n\n  /**\n   * update client\n   * @param id\n   * @param updateClientDto\n   */\n  async update(id: number, data: UpdateClientDto, user: UserEntity) {\n    if (user.role === UserRole.ADMIN || UserRole.MANAGER) {\n      const client = await this.clientRepository.preload({ id, ...data });\n      if (!client) throw new NotFoundException();\n      return await this.clientRepository.save(client);\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n\n  /**\n   * soft delete client\n   * role_admin or role_manager\n   * can do it\n   * @param id\n   * @param user\n   */\n  async sofDelete(id: number, user: UserEntity): Promise {\n    if (user.role === UserRole.ADMIN || UserRole.MANAGER) {\n      const client = await this.clientRepository.findOne(id);\n      if (!client) throw new NotFoundException();\n      else return await this.clientRepository.softDelete(id);\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n\n  /**\n   * restore client deleted\n   * role_admin or role_manager\n   * @param id\n   * @param user\n   */\n  async restore(id: number, user: UserEntity): Promise {\n    if (user.role === UserRole.ADMIN || UserRole.MANAGER) {\n      const client = this.clientRepository\n        .createQueryBuilder('client')\n        .where('client.id = : id', { id: id });\n\n      if (!client) {\n        throw new NotFoundException();\n      }\n      return await this.clientRepository.restore(id);\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContactController.html":{"url":"controllers/ContactController.html","title":"controller - ContactController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/contact.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAllByClient\n                            \n                            \n                                    Async\n                                getOneByClient\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(client_id: number, createContactDto: CreateContactDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('client/:client_id/contact')\n                \n            \n\n            \n                \n                    Defined in src/client/contact.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createContactDto\n                                    \n                                                CreateContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('contacts')\n                \n            \n\n            \n                \n                    Defined in src/client/contact.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('contact/:id')\n                \n            \n\n            \n                \n                    Defined in src/client/contact.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllByClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllByClient(client_id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('client/:client_id/contact')\n                \n            \n\n            \n                \n                    Defined in src/client/contact.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneByClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneByClient(client_id: number, contact_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('client/:client_id/contact/:contact_id')\n                \n            \n\n            \n                \n                    Defined in src/client/contact.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(client_id: number, contact_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('client/:client_id/contact/:contact_id')\n                \n            \n\n            \n                \n                    Defined in src/client/contact.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(client_id: number, contact_id: number, updateContactDto: UpdateContactDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('client/:client_id/contact/:contact_id')\n                \n            \n\n            \n                \n                    Defined in src/client/contact.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateContactDto\n                                    \n                                                UpdateContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  UseGuards,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { User } from 'src/decorators/user.decorator';\nimport { ContactService } from './contact.service';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { CreateContactDto } from './dto/create-contact.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { ContactEntity } from './entities/contact.entity';\nimport { UpdateContactDto } from './dto/update-contact.dto';\n\n@UseGuards(JwtAuthGuard)\n@Controller()\nexport class ContactController {\n  constructor(private readonly contactService: ContactService) {}\n\n  @Get('contacts')\n  async findAll(): Promise {\n    return await this.contactService.findAll();\n  }\n\n  @Get('contact/:id')\n  async findOne(@Param('id', ParseIntPipe) id: number): Promise {\n    return await this.contactService.findOne(id);\n  }\n\n  @Get('client/:client_id/contact')\n  async getAllByClient(\n    @Param('client_id', ParseIntPipe) client_id: number,\n    @User() user: UserEntity,\n  ): Promise {\n    return await this.contactService.getAll(client_id, user);\n  }\n\n  @Post('client/:client_id/contact')\n  async create(\n    @Param('client_id', ParseIntPipe) client_id: number,\n    @Body() createContactDto: CreateContactDto,\n    @User() user: UserEntity,\n  ): Promise {\n    return await this.contactService.create(client_id, createContactDto, user);\n  }\n\n  @Get('client/:client_id/contact/:contact_id')\n  async getOneByClient(\n    @Param('client_id', ParseIntPipe) client_id: number,\n    @Param('contact_id', ParseIntPipe) contact_id: number,\n  ): Promise {\n    return this.contactService.getOne(client_id, contact_id);\n  }\n\n  @Put('client/:client_id/contact/:contact_id')\n  async update(\n    @Param('client_id', ParseIntPipe) client_id: number,\n    @Param('contact_id', ParseIntPipe) contact_id: number,\n    @Body() updateContactDto: UpdateContactDto,\n  ): Promise {\n    return await this.contactService.update(\n      client_id,\n      contact_id,\n      updateContactDto,\n    );\n  }\n\n  @Delete('client/:client_id/contact/:contact_id')\n  async remove(\n    @Param('client_id', ParseIntPipe) client_id: number,\n    @Param('contact_id', ParseIntPipe) contact_id: number,\n  ): Promise {\n    return await this.contactService.remove(client_id, contact_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactEntity.html":{"url":"classes/ContactEntity.html","title":"class - ContactEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/entities/contact.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                comment\n                            \n                            \n                                email\n                            \n                            \n                                fullname\n                            \n                            \n                                id\n                            \n                            \n                                job\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClientEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/contact.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/contact.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/contact.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/contact.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/contact.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', length: 180, nullable: false, default: 'NR'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/contact.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/entities/contact.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { ClientEntity } from './client.entity';\n\n@Entity('contact')\nexport class ContactEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ nullable: false })\n  fullname: string;\n\n  @Column({ type: 'varchar', length: 180, nullable: false, default: 'NR' })\n  job: string;\n\n  @Column({ nullable: true })\n  phone: string;\n\n  @Column({ nullable: true })\n  email: string;\n\n  @Column({ type: 'text', nullable: false })\n  comment: string;\n\n  @ManyToOne(() => ClientEntity, (client) => client.contacts, {\n    nullable: false,\n  })\n  client: ClientEntity;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/contact.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contactRepository: Repository, clientRepository: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/client/contact.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contactRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(id: number, data: CreateContactDto, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/client/contact.service.ts:41\n                \n            \n\n\n            \n                \n                    add contact to client\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/client/contact.service.ts:26\n                \n            \n\n\n            \n                \n                    find all client of database\nall role except role_client/contact\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/client/contact.service.ts:79\n                \n            \n\n\n            \n                \n                    get contact by id\njoin client property company\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(id: number, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/client/contact.service.ts:62\n                \n            \n\n\n            \n                \n                    Qui a e droit de voir l' ensemble des contacts ?\nget all contacts\nof client id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(client_id: number, contact_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/client/contact.service.ts:101\n                \n            \n\n\n            \n                \n                    Get contact by id and client id\njoin client property company\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(client_id: number, contact_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/client/contact.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(client_id: number, id: number, data: UpdateContactDto)\n                \n            \n\n\n            \n                \n                    Defined in src/client/contact.service.ts:126\n                \n            \n\n\n            \n                \n                    update contact if we have client id corresponding\nwho can update contact : all\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        //contact_id\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                UpdateContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { createQueryBuilder, Repository } from 'typeorm';\nimport { CreateContactDto } from './dto/create-contact.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport { ContactEntity } from './entities/contact.entity';\nimport { ClientEntity } from './entities/client.entity';\nimport { UserEntity, UserRole } from 'src/user/entities/user.entity';\nimport { UserService } from 'src/user/user.service';\nimport { UpdateContactDto } from './dto/update-contact.dto';\n\n@Injectable()\nexport class ContactService {\n  constructor(\n    @InjectRepository(ContactEntity)\n    private contactRepository: Repository,\n    @InjectRepository(ClientEntity)\n    private clientRepository: Repository,\n    private userService: UserService,\n  ) {}\n\n  /**\n   * find all client of database\n   * all role except role_client/contact\n   */\n  async findAll() {\n    const contacts = this.contactRepository\n      .createQueryBuilder('contact')\n      .innerJoinAndSelect('contact.client', 'client')\n      .orderBy('contact.fullname', 'DESC')\n      .getMany();\n    return contacts;\n  }\n\n  /**\n   * add contact to client\n   * @param id\n   * @param data\n   * @param user\n   */\n  async create(id: number, data: CreateContactDto, user: UserEntity) {\n    if (user.role === UserRole.MANAGER || UserRole.ADMIN) {\n      const client = await this.clientRepository.findOne(id);\n      if (!client) {\n        throw new NotFoundException(`client ${id} not found`);\n      }\n      const contact = this.contactRepository.create(data);\n      contact.client = client;\n      return await this.contactRepository.save(contact);\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n\n  /**\n   * Qui a e droit de voir l' ensemble des contacts ?\n   * get all contacts\n   * of client id\n   * @param id\n   * @param user\n   */\n  async getAll(id: number, user: UserEntity) {\n    const client = await this.clientRepository.findOne(id);\n    if (!client) {\n      throw new NotFoundException(`client ${id} not found`);\n    }\n    const contacts = await this.contactRepository.find({\n      where: { client: client },\n      order: { id: 'DESC' },\n    });\n    return contacts;\n  }\n\n  /**\n   * get contact by id\n   * join client property company\n   * @param id\n   */\n  async findOne(id: number) {\n    const contact = await this.contactRepository\n      .createQueryBuilder('contact')\n      .leftJoin('contact.client', 'client')\n      // eslint-disable-next-line prettier/prettier\n      .select(\n        'contact.id, fullname, job, phone, email, comment, company, clientId',\n      )\n      .where('contact.id = :id', { id: id })\n      .getRawOne();\n\n    if (!contact) throw new NotFoundException();\n\n    return contact;\n  }\n\n  /**\n   * Get contact by id and client id\n   * join client property company\n   * @param client_id\n   * @param contact_id\n   */\n  async getOne(client_id: number, contact_id: number) {\n    const contact = await this.contactRepository\n      .createQueryBuilder('contact')\n      .leftJoin('contact.client', 'client')\n      // eslint-disable-next-line prettier/prettier\n      .select(\n        'contact.id, fullname, job, phone, email, comment, company, clientId',\n      )\n      .where('contact.id = :contact_id', { contact_id: contact_id })\n      .andWhere('contact.clientId = :client_id', { client_id: client_id })\n      //.getSql()\n      .getRawOne();\n\n    if (!contact) throw new NotFoundException();\n\n    return contact;\n  }\n\n  /**\n   * update contact if we have client id corresponding\n   * who can update contact : all\n   * @param client_id\n   * @param id //contact_id\n   * @param data\n   */\n  async update(client_id: number, id: number, data: UpdateContactDto) {\n    const clientExist = await this.clientRepository.findOne(client_id);\n    if (!clientExist) throw new NotFoundException('this client not exist');\n    const contact = await this.contactRepository.preload({ id, ...data });\n    if (!contact) throw new NotFoundException();\n    return await this.contactRepository.save(contact);\n  }\n\n  /**\n   *\n   * @param client_id\n   * @param contact_id\n   */\n  async remove(client_id: number, contact_id: number) {\n    const contact = await this.contactRepository\n      .createQueryBuilder('contact')\n      .leftJoin('contact.client', 'client')\n      .select(\n        'contact.id, fullname, job, phone, email, comment, company, clientId',\n      )\n      .where('contact.id = :contact_id', { contact_id: contact_id })\n      .andWhere('contact.clientId = :client_id', { client_id: client_id })\n      .getRawOne();\n\n    if (!contact) throw new NotFoundException('contact not exist');\n    \n    return await this.contactRepository.remove(contact);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClientDto.html":{"url":"classes/CreateClientDto.html","title":"class - CreateClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/dto/create-client.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                description\n                            \n                            \n                                emails\n                            \n                            \n                                link_util\n                            \n                            \n                                logo\n                            \n                            \n                                phones\n                            \n                            \n                                site\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-client.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-client.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsArray()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-client.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link_util\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-client.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-client.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phones\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-client.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-client.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsNotEmpty, IsOptional, IsString, IsUrl } from 'class-validator';\n\nexport class CreateClientDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  company: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  site: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  link_util: string;\n\n  @ApiProperty()\n  @IsArray()\n  emails: string[];\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  phones: string[];\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  logo: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateContactDto.html":{"url":"classes/CreateContactDto.html","title":"class - CreateContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/dto/create-contact.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                email\n                            \n                            \n                                fullname\n                            \n                            \n                                job\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-contact.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-contact.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-contact.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-contact.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/create-contact.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateContactDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  fullname: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  job: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  comment: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-profile.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                firstname\n                            \n                            \n                                fixe\n                            \n                            \n                                lastname\n                            \n                            \n                                mobile\n                            \n                            \n                                nationality\n                            \n                            \n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/create-profile.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/create-profile.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/create-profile.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/create-profile.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/create-profile.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nationality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/create-profile.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/create-profile.dto.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateProfileDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  firstname: string;\n\n  @ApiProperty()\n  @IsString()\n  lastname: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  address: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  nationality: string;\n\n  @IsOptional()\n  @IsString()\n  mobile: string;\n\n  @IsOptional()\n  @IsString()\n  fixe: string;\n\n  @IsOptional()\n  @IsString()\n  photo: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTicketDto.html":{"url":"classes/CreateTicketDto.html","title":"class - CreateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/create-ticket.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTicketDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CurriculumController.html":{"url":"controllers/CurriculumController.html","title":"controller - CurriculumController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CurriculumController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/curriculum/curriculum.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                curriculum\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                recover\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                statsCVNumberByAge\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateByCriteria\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: AddCvDTO, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AddCvDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete('delete/:id')\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            recover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recover(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('restore/:id')\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            statsCVNumberByAge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    statsCVNumberByAge()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('stats')\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateCvDTO, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateCvDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateByCriteria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateByCriteria(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/curriculum/curriculum.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Delete, Get, Param, ParseIntPipe, Patch, Post, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { CurriculumService } from './curriculum.service';\nimport { AddCvDTO } from './dto/Add-cv-dto';\nimport { CurriculumEntity } from './entities/curriculum.entity';\nimport { UpdateCvDTO } from './dto/Update-cv-dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { User } from '../decorators/user.decorator';\nimport { UserEntity, UserRole } from 'src/user/entities/user.entity';\n\n@UseInterceptors(ClassSerializerInterceptor)\n@Controller('curriculum')\nexport class CurriculumController {\n  constructor(private readonly curriculumService: CurriculumService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async index(@User() user: UserEntity): Promise {\n    if (user.role === UserRole.ADMIN) {\n      return await this.curriculumService.findAll();\n    }\n    return await this.curriculumService.getOwnerAll(user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(\n    @Body() data: AddCvDTO,\n    @User() user: UserEntity,\n  ): Promise {\n    return await this.curriculumService.add(data, user);\n  }\n\n  //using query builder typeorm\n  @Get('stats')\n  async statsCVNumberByAge() {\n    return await this.curriculumService.groupCvNumberByAge();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch()\n  // update with criteria\n  async updateByCriteria(@Body() data: any): Promise {\n    const { criteria, updatecvdto } = data;\n    return await this.curriculumService.updateByCriteria(criteria, updatecvdto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  async find(\n    @Param('id', ParseIntPipe) id: number,\n    @User() user: UserEntity,\n  ): Promise {\n    return await this.curriculumService.findById(id, user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  // eslint-disable-next-line prettier/prettier\n  async update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() data: UpdateCvDTO,\n    @User() user: UserEntity,\n  ): Promise {\n    return await this.curriculumService.update(id, data, user);\n  }\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  // eslint-disable-next-line prettier/prettier\n  async remove(\n    @Param('id', ParseIntPipe) id: number,\n    @User() user: UserEntity,\n  ): Promise {\n    return await this.curriculumService.remove(id, user);\n    //return await this.curriculumService.softRemove(id);\n  }\n\n  //we can not use :id and @Param and user [4, 5, 6] or {age: 12} ans @Body()\n  @UseGuards(JwtAuthGuard)\n  @Delete('delete/:id')\n  async delete(\n    @Param('id', ParseIntPipe) id: number,\n    @User() user: UserEntity,\n  ): Promise {\n    //return await this.curriculumService.delete(id);\n    return await this.curriculumService.sofDelete(id, user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('restore/:id')\n  async recover(\n    @Param('id', ParseIntPipe) id: number,\n    @User() user: UserEntity,\n  ): Promise {\n    return this.curriculumService.restore(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurriculumEntity.html":{"url":"classes/CurriculumEntity.html","title":"class - CurriculumEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurriculumEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/curriculum/entities/curriculum.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TimestampEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                cin\n                            \n                            \n                                counters\n                            \n                            \n                                firstname\n                            \n                            \n                                isActive\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                            \n                                user\n                            \n                            \n                                created_at\n                            \n                            \n                                delete_at\n                            \n                            \n                                id\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetCounters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {cascade: undefined, eager: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/entities/curriculum.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({update: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:20\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetCounters\n                        \n                        \n                    \n                \n            \n            \n                \nresetCounters()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterInsert()\n                \n            \n\n            \n                \n                    Defined in src/curriculum/entities/curriculum.entity.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TimestampEntity } from 'src/generics/timestamp.entity';\nimport { AfterInsert, Column, Entity, ManyToOne } from 'typeorm';\nimport { UserEntity } from '../../user/entities/user.entity';\n\n@Entity('curriculum')\nexport class CurriculumEntity extends TimestampEntity {\n  @Column({ length: 50 })\n  name: string;\n\n  @Column({ nullable: true })\n  firstname: string;\n\n  @Column()\n  age: number;\n\n  @Column({ unique: true })\n  cin: string;\n\n  @Column()\n  job: string;\n\n  @Column({ nullable: true })\n  path: string;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  counters: number;\n\n  @AfterInsert()\n  resetCounters() {\n    this.counters = 0;\n    console.log(this.counters);\n  }\n\n  //RELATION\n  @ManyToOne(() => UserEntity, (user) => user.curriculums, {\n    cascade: ['insert', 'update'],\n    eager: true,\n    nullable: true,\n  })\n  user: UserEntity;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CurriculumModule.html":{"url":"modules/CurriculumModule.html","title":"module - CurriculumModule","body":"\n                   \n\n\n\n\n    Modules\n    CurriculumModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CurriculumModule\n\n\n\ncluster_CurriculumModule_imports\n\n\n\ncluster_CurriculumModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nCurriculumModule\n\nCurriculumModule\n\nCurriculumModule -->\n\nUserModule->CurriculumModule\n\n\n\n\n\nCurriculumService\n\nCurriculumService\n\nCurriculumModule -->\n\nCurriculumService->CurriculumModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/curriculum/curriculum.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CurriculumService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CurriculumController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from 'src/user/user.module';\nimport { CurriculumController } from './curriculum.controller';\nimport { CurriculumService } from './curriculum.service';\nimport { CurriculumEntity } from './entities/curriculum.entity';\nimport { CurriculumSubscriber } from './subscribers/curriculum.subscriber';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CurriculumEntity]), UserModule],\n  controllers: [CurriculumController],\n  providers: [CurriculumService, CurriculumSubscriber],\n})\nexport class CurriculumModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurriculumService.html":{"url":"injectables/CurriculumService.html","title":"injectable - CurriculumService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurriculumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/curriculum/curriculum.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getOwnerAll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                groupCvNumberByAge\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                restore\n                            \n                            \n                                    Async\n                                sofDelete\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateByCriteria\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(curriculumRepository: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/curriculum/curriculum.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        curriculumRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(addcvdto: AddCvDTO, user)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addcvdto\n                                    \n                                                AddCvDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(criteria: any)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(_id: number, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            groupCvNumberByAge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    groupCvNumberByAge()\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restore(id: number, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sofDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sofDelete(id: number, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatecvdto: UpdateCvDTO, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatecvdto\n                                    \n                                                UpdateCvDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateByCriteria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateByCriteria(criteria: any, data: UpdateCvDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/curriculum.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateCvDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOwnerAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/curriculum.service.ts:119\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AddCvDTO } from './dto/Add-cv-dto';\nimport { CurriculumEntity } from './entities/curriculum.entity';\nimport { UpdateCvDTO } from './dto/Update-cv-dto';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { UserService } from 'src/user/user.service';\n\n@Injectable()\nexport class CurriculumService {\n  constructor(\n    @InjectRepository(CurriculumEntity)\n    private curriculumRepository: Repository,\n    private userService: UserService,\n  ) {}\n\n  //factorize function\n  async findById(_id: number, user: UserEntity): Promise {\n    const curriculum = await this.curriculumRepository.findOne(_id);\n\n    if (!curriculum) {\n      throw new NotFoundException(` curriculum ${_id} doesn't exist`);\n    }\n\n    if (await this.userService.isOwnerOrAdmin(curriculum, user)) {\n      return await curriculum;\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n\n  //Get all cv from database\n  async findAll(): Promise {\n    return await this.curriculumRepository.find();\n  }\n\n  //Create new cv\n  async add(addcvdto: AddCvDTO, user): Promise {\n    const newCv = await this.curriculumRepository.create(addcvdto);\n    newCv.user = user;\n    return await this.curriculumRepository.save(newCv);\n  }\n\n  //Maj Cv by his id (patch)\n  // eslint-disable-next-line prettier/prettier\n  async update(id: number, updatecvdto: UpdateCvDTO, user: UserEntity): Promise {\n    const newCurriculum = await this.curriculumRepository.preload({ id, ...updatecvdto});\n    //Test if is not exist (id is not in database)\n    if (!newCurriculum) {\n      throw new NotFoundException(`curriculum ${id} doesn't exist`);\n    }\n\n    console.log({ ...updatecvdto });\n\n    if (await this.userService.isOwnerOrAdmin(newCurriculum, user)) {\n      return await this.curriculumRepository.save(newCurriculum);\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n\n  //Using criteria to update entities\n  async updateByCriteria(criteria: any, data: UpdateCvDTO): Promise {\n    return await this.curriculumRepository.update(criteria, data);\n  }\n\n  //Delete with remove .param  is entities or list of entities\n  async remove(id: number, user: UserEntity): Promise {\n    const cvToRemove = await this.findById(id, user);\n    return await this.curriculumRepository.remove(cvToRemove);\n  }\n\n  //Flexible Delete by criteria. Criteria can be id or array [id1, id2, ..]; object {job: stagiaire}\n  async delete(criteria: any): Promise {\n    return await this.curriculumRepository.delete(criteria);\n  }\n\n  //soft remove with criteria\n  async sofDelete(id: number, user: UserEntity): Promise {\n    const curriculum = await this.findById(id, user);\n    return await this.curriculumRepository.softDelete(curriculum.id); //softDelete([58, 59])\n  }\n\n  //recover cv delete with remove meth.\n  async restore(id: number, user: UserEntity): Promise {\n    const curriculum = await this.curriculumRepository.query(\n      'select * from curriculum where id = ?',\n      [id],\n    );\n    console.log(curriculum);\n    if (!curriculum) {\n      throw new NotFoundException(`curriculum ${id} doesn't exist`);\n    }\n\n    if (await this.userService.isOwnerOrAdmin(curriculum, user)) {\n      return await this.curriculumRepository.restore(curriculum.id);\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n\n  //create query builder\n  async groupCvNumberByAge() {\n    // creer un queryBuilder\n    const qb = this.curriculumRepository.createQueryBuilder('cv');\n    // cherchez/grouper le nombre de cv par age\n    // eslint-disable-next-line prettier/prettier\n          qb.select(\"cv.job, count(cv.id) as nombreDeCV\")\n            .groupBy('cv.job');\n    console.log(qb.getSql());\n    return await qb.getRawMany();\n\n    /* qb.select('cv.job, count(cv.id) as nombreDeCV')\n      .groupBy('cv.job'); */\n  }\n\n  // eslint-disable-next-line prettier/prettier\n  getOwnerAll = async (user: Partial): Promise => {\n\n    const qb = this.curriculumRepository.createQueryBuilder('cv');\n    qb.where('cv.user = :user', { user: user.id }).orderBy('cv.id', 'DESC');\n    //console.log(qb.getSql());\n    return await qb.getMany();\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurriculumSubscriber.html":{"url":"classes/CurriculumSubscriber.html","title":"class - CurriculumSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurriculumSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/curriculum/subscribers/curriculum.subscriber.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cinGenerator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, cinGenerator: CinGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/curriculum/subscribers/curriculum.subscriber.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cinGenerator\n                                                  \n                                                        \n                                                                        CinGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cinGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CinGeneratorService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/subscribers/curriculum.subscriber.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeInsert(event: InsertEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/subscribers/curriculum.subscriber.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenTo\n                        \n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n            \n                \n                    Defined in src/curriculum/subscribers/curriculum.subscriber.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Connection,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  InsertEvent,\n} from 'typeorm';\nimport { CurriculumEntity } from '../entities/curriculum.entity';\nimport { CinGeneratorService } from '../../helpers/cin-generator/cin-generator.service';\n\n@EventSubscriber()\nexport class CurriculumSubscriber\n  implements EntitySubscriberInterface {\n  \n  private cinGenerator: CinGeneratorService;\n\n  constructor(connection: Connection, cinGenerator: CinGeneratorService) {\n    connection.subscribers.push(this);\n    this.cinGenerator = cinGenerator;\n  }\n\n  listenTo() {\n    return CurriculumEntity;\n  }\n\n  async beforeInsert(event: InsertEvent): Promise {\n    console.log(`BEFORE CV INSERTED:`, event.entity);\n    const cv = event.entity;\n    cv.cin = await this.cinGenerator.handle();\n    return cv;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirstMiddleware.html":{"url":"injectables/FirstMiddleware.html","title":"injectable - FirstMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirstMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class FirstMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    console.log('Je suis le first Middleware');\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpersModule.html":{"url":"modules/HelpersModule.html","title":"module - HelpersModule","body":"\n                   \n\n\n\n\n    Modules\n    HelpersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelpersModule\n\n\n\ncluster_HelpersModule_exports\n\n\n\ncluster_HelpersModule_providers\n\n\n\n\nCinGeneratorService \n\nCinGeneratorService \n\n\n\nHelpersModule\n\nHelpersModule\n\nCinGeneratorService  -->\n\nHelpersModule->CinGeneratorService \n\n\n\n\n\nCinGeneratorService\n\nCinGeneratorService\n\nHelpersModule -->\n\nCinGeneratorService->HelpersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/helpers/helpers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CinGeneratorService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CinGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { CinGeneratorService } from './cin-generator/cin-generator.service';\n\n@Global()\n@Module({\n  providers: [CinGeneratorService],\n  exports: [CinGeneratorService],\n})\nexport class HelpersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: PayloadInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PayloadInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PayloadInterface } from '../interface/payload.interface';\nimport { AuthService } from '../auth.service';\nimport { UserEntity } from 'src/user/entities/user.entity';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private authService: AuthService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('APP_SECRET'),\n    });\n  }\n\n  async validate(payload: PayloadInterface): Promise> {\n    console.log('payload:', payload);\n    const user = await this.authService.validateUser(payload.username);\n    //if user exist return it . It's automatically placed in request\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginCredentialsDto.html":{"url":"classes/LoginCredentialsDto.html","title":"class - LoginCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.credentials.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login.credentials.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login.credentials.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\nimport { IsString } from 'class-validator';\n\nexport class LoginCredentialsDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadInterface.html":{"url":"interfaces/PayloadInterface.html","title":"interface - PayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PayloadInterface {\n  username: string;\n  email: string;\n  role: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateProfileDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('users')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateProfileDto: UpdateProfileDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete, UseGuards, UseInterceptors, ClassSerializerInterceptor, ParseIntPipe, Patch } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { User } from 'src/decorators/user.decorator';\nimport { ProfileEntity } from './entities/profile.entity';\n\n@UseInterceptors(ClassSerializerInterceptor)\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Body() data: CreateProfileDto, @User() user: UserEntity) {\n    return await this.profileService.create(data, user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('users')\n  findAll(): Promise {\n    return this.profileService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('user/:id')\n  findOne(@Param('id', ParseIntPipe) id: number) {\n    return this.profileService.findOne(id);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateProfileDto: UpdateProfileDto,\n    @User() user: UserEntity,\n  ): Promise {\n    return this.profileService.update(id, updateProfileDto, user);\n  }\n\n  /* @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  remove(@Param('id', ParseIntPipe) id: number, @User() user: UserEntity) {\n    return this.profileService.remove(id, user);\n  } */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileEntity.html":{"url":"classes/ProfileEntity.html","title":"class - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/entities/profile.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                firstname\n                            \n                            \n                                fixe\n                            \n                            \n                                id\n                            \n                            \n                                lastname\n                            \n                            \n                                mobile\n                            \n                            \n                                nationality\n                            \n                            \n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'longtext', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/entities/profile.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/entities/profile.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 80, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/entities/profile.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/entities/profile.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 80})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/entities/profile.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 80, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/entities/profile.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nationality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/entities/profile.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/entities/profile.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/profile/entities/profile.entity.ts:31\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('profile')\nexport class ProfileEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 50 })\n  firstname: string;\n\n  @Column({ length: 80 })\n  lastname: string;\n\n  @Column({ type: 'longtext', nullable: true })\n  address: string;\n\n  @Column({ nullable: false })\n  nationality: string;\n\n  @Column({ length: 80, nullable: true })\n  mobile: string;\n\n  @Column({ length: 80, nullable: true })\n  fixe: string;\n\n  @Column({ nullable: true })\n  photo: string | null;\n\n  @Expose()\n  get fullName(): string {\n    return `${this.firstname} ${this.lastname}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { ProfileEntity } from './entities/profile.entity';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProfileEntity]), UserModule],\n  controllers: [ProfileController],\n  providers: [ProfileService],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateProfileDto, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:23\n                \n            \n\n\n            \n                \n                    create profile's user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:33\n                \n            \n\n\n            \n                \n                    find all users\nwith profile\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:42\n                \n            \n\n\n            \n                \n                    find user\nwith profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateProfileDto, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:56\n                \n            \n\n\n            \n                \n                    update profile 's user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { ProfileEntity } from './entities/profile.entity';\nimport { UserEntity, UserRole } from 'src/user/entities/user.entity';\nimport { UserService } from 'src/user/user.service';\n\n@Injectable()\nexport class ProfileService {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private profileRepository: Repository,\n    private userService: UserService,\n  ) {}\n\n  /**\n   * create profile's user\n   * @param data\n   * @param user\n   */\n  async create(data: CreateProfileDto, user: UserEntity) {\n    const profile = this.profileRepository.create(data);\n    user.profile = profile;\n    return await this.userService.update(user);\n  }\n\n  /**\n   * find all users\n   * with profile\n   */\n  async findAll(): Promise {\n    return await this.userService.findAllWithProfile();\n  }\n\n  /**\n   * find user\n   * with profile\n   * @param id\n   */\n  async findOne(id: number): Promise {\n    const profile = await this.userService.findOne(id);\n    if (!profile) {\n      throw new NotFoundException();\n    }\n    return profile;\n  }\n\n  /**\n   * update profile 's user\n   * @param id\n   * @param data\n   * @param user\n   */\n  async update(\n    id: number,\n    data: UpdateProfileDto,\n    user: UserEntity,\n  ): Promise {\n    const newProfile = await this.profileRepository.preload({ id, ...data });\n    if (!newProfile) {\n      throw new NotFoundException(`profile ${id} doesn't exist`);\n    }\n    const userWithProfile = await this.userService.findOne(user.id);\n\n    if (\n      user.role === UserRole.ADMIN ||\n      (userWithProfile.profile && userWithProfile.profile.id === id)\n    ) {\n      return await this.profileRepository.save(newProfile);\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n\n  /* async remove(id: number, user: UserEntity): Promise {\n    return await this.profileRepository.delete(id);\n  } */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterAuthDto.html":{"url":"classes/RegisterAuthDto.html","title":"class - RegisterAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/register.auth.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/register.auth.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/register.auth.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class RegisterAuthDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Type(() => String)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TicketController.html":{"url":"controllers/TicketController.html","title":"controller - TicketController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TicketController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ticket\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createTicketDto: CreateTicketDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/ticket/ticket.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTicketDto\n                                    \n                                                CreateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/ticket/ticket.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/ticket/ticket.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/ticket/ticket.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTicketDto: UpdateTicketDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/ticket/ticket.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTicketDto\n                                    \n                                                UpdateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { TicketService } from './ticket.service';\nimport { CreateTicketDto } from './dto/create-ticket.dto';\nimport { UpdateTicketDto } from './dto/update-ticket.dto';\n\n@Controller('ticket')\nexport class TicketController {\n  constructor(private readonly ticketService: TicketService) {}\n\n  @Post()\n  create(@Body() createTicketDto: CreateTicketDto) {\n    return this.ticketService.create(createTicketDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.ticketService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.ticketService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateTicketDto: UpdateTicketDto) {\n    return this.ticketService.update(+id, updateTicketDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.ticketService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketEntity.html":{"url":"classes/TicketEntity.html","title":"class - TicketEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/entities/ticket.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TimestampEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assignTo\n                            \n                            \n                                comment\n                            \n                            \n                                customer\n                            \n                            \n                                description\n                            \n                            \n                                followers\n                            \n                            \n                                id\n                            \n                            \n                                matricule\n                            \n                            \n                                order\n                            \n                            \n                                priority\n                            \n                            \n                                status\n                            \n                            \n                                subject\n                            \n                            \n                                created_at\n                            \n                            \n                                delete_at\n                            \n                            \n                                id\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assignTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false, eager: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClientEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false, eager: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matricule\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, unique: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 120, nullable: false, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ticket/entities/ticket.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({update: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:20\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Column, Entity, JoinColumn, OneToMany, PrimaryGeneratedColumn, ManyToOne, ManyToMany, JoinTable } from 'typeorm';\nimport { TimestampEntity } from 'src/generics/timestamp.entity';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { ClientEntity } from 'src/client/entities/client.entity';\n\nexport enum PriorityTicketEnum {\n  HIGH = 'high',\n  MEDIUM = 'medium',\n  LOW = 'low',\n  NORMAL = 'normal',\n}\n\nexport enum StatusTicketEnum {\n  NEW = 'new',\n  WAITING = 'waiting',\n  RESOLVED = 'resolved',\n  REJECTED = 'rejected',\n}\n\n@Entity('ticket')\nexport class TicketEntity extends TimestampEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 255, unique: true, nullable: false })\n  matricule: string;\n\n  //@Column({ length: 255, unique: true, nullable: true })\n  //code: string;\n\n  @Column({ length: 255, unique: true, nullable: true })\n  order: string;\n\n  @Column({ length: 120, nullable: false, default: PriorityTicketEnum.NORMAL })\n  priority: string;\n\n  @Column({ nullable: false, default: StatusTicketEnum.NEW })\n  status: string;\n\n  @Column({ nullable: false })\n  subject: string;\n\n  @Column({ type: 'varchar', nullable: false })\n  description: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  comment: string;\n\n  //files\n\n  //----------------RELATION-----------------------//\n\n  @ManyToOne(() => UserEntity, (user) => user.tickets, {\n    nullable: false,\n    eager: true,\n  })\n  assignTo: UserEntity;\n\n  @ManyToOne(() => ClientEntity, (client) => client.tickets, {\n    nullable: false,\n    eager: true,\n  })\n  customer: ClientEntity;\n\n  @ManyToMany(() => UserEntity)\n  @JoinTable()\n  followers: UserEntity[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TicketModule.html":{"url":"modules/TicketModule.html","title":"module - TicketModule","body":"\n                   \n\n\n\n\n    Modules\n    TicketModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_imports\n\n\n\ncluster_TicketModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nTicketModule\n\nTicketModule\n\nTicketModule -->\n\nUserModule->TicketModule\n\n\n\n\n\nTicketService\n\nTicketService\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ticket/ticket.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TicketService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TicketController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TicketService } from './ticket.service';\nimport { TicketController } from './ticket.controller';\nimport { UserModule } from 'src/user/user.module';\nimport { TicketEntity } from './entities/ticket.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TicketEntity]), UserModule],\n  controllers: [TicketController],\n  providers: [TicketService],\n})\nexport class TicketModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketService.html":{"url":"injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createTicketDto: CreateTicketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/ticket/ticket.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTicketDto\n                                    \n                                                CreateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/ticket/ticket.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/ticket/ticket.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/ticket/ticket.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateTicketDto: UpdateTicketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/ticket/ticket.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTicketDto\n                                    \n                                                UpdateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTicketDto } from './dto/create-ticket.dto';\nimport { UpdateTicketDto } from './dto/update-ticket.dto';\n\n@Injectable()\nexport class TicketService {\n  create(createTicketDto: CreateTicketDto) {\n    return 'This action adds a new ticket';\n  }\n\n  findAll() {\n    return `This action returns all ticket`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} ticket`;\n  }\n\n  update(id: number, updateTicketDto: UpdateTicketDto) {\n    return `This action updates a #${id} ticket`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} ticket`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntity.html":{"url":"classes/TimestampEntity.html","title":"class - TimestampEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generics/timestamp.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                delete_at\n                            \n                            \n                                id\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({update: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/generics/timestamp.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/generics/timestamp.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/generics/timestamp.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/generics/timestamp.entity.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport class TimestampEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @CreateDateColumn({\n    update: false,\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    nullable: true,\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn()\n  delete_at: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClientDto.html":{"url":"classes/UpdateClientDto.html","title":"class - UpdateClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/dto/update-client.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                contacts\n                            \n                            \n                                description\n                            \n                            \n                                emails\n                            \n                            \n                                link_util\n                            \n                            \n                                logo\n                            \n                            \n                                phones\n                            \n                            \n                                site\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-client.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contacts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContactEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-client.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-client.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-client.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link_util\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-client.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-client.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phones\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-client.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-client.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateClientDto } from './create-client.dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsUrl } from 'class-validator';\nimport { ContactEntity } from '../entities/contact.entity';\n\nexport class UpdateClientDto extends PartialType(CreateClientDto) {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  company: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  site: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsUrl()\n  link_util: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  emails: string[];\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  phones: string[];\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  description: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  logo: string;\n\n  @ApiProperty()\n  @IsOptional()\n  contacts: ContactEntity[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateContactDto.html":{"url":"classes/UpdateContactDto.html","title":"class - UpdateContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client/dto/update-contact.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                email\n                            \n                            \n                                fullname\n                            \n                            \n                                job\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-contact.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-contact.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-contact.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-contact.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/client/dto/update-contact.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsOptional, IsString } from 'class-validator';\nimport { CreateContactDto } from './create-contact.dto';\n\nexport class UpdateContactDto extends PartialType(CreateContactDto) {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  fullname: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  job: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  phone: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  comment: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCvDTO.html":{"url":"classes/UpdateCvDTO.html","title":"class - UpdateCvDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCvDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/curriculum/dto/Update-cv-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                cin\n                            \n                            \n                                firstname\n                            \n                            \n                                isActive\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@Type(undefined)@IsNumber()@Min(15)@Max(65)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Update-cv-dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Update-cv-dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Update-cv-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsBoolean()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Update-cv-dto.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Update-cv-dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Update-cv-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/curriculum/dto/Update-cv-dto.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsBoolean, IsNotEmpty, IsNumber, IsOptional, IsString, Max, Min } from \"class-validator\";\n\nexport class UpdateCvDTO {\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(15)\n  @Max(65)\n  age: number;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  cin: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  job: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  path: string;\n\n  @ApiProperty()\n  @IsBoolean()\n  @IsOptional()\n  isActive: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                firstname\n                            \n                            \n                                fixe\n                            \n                            \n                                lastname\n                            \n                            \n                                mobile\n                            \n                            \n                                nationality\n                            \n                            \n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/update-profile.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/update-profile.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/update-profile.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/update-profile.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/update-profile.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nationality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/update-profile.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/update-profile.dto.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProfileDto } from './create-profile.dto';\nimport { IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  lastname: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  address: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  nationality: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  mobile: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  fixe: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  photo: string | null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTicketDto.html":{"url":"classes/UpdateTicketDto.html","title":"class - UpdateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/update-ticket.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTicketDto } from './create-ticket.dto';\n\nexport class UpdateTicketDto extends PartialType(CreateTicketDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Controller, UseInterceptors } from '@nestjs/common';\n\n@UseInterceptors(ClassSerializerInterceptor)\n@Controller('user')\nexport class UserController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TimestampEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                curriculums\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                profile\n                            \n                            \n                                role\n                            \n                            \n                                salt\n                            \n                            \n                                tickets\n                            \n                            \n                                username\n                            \n                            \n                                validated_at\n                            \n                            \n                                created_at\n                            \n                            \n                                delete_at\n                            \n                            \n                                id\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curriculums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CurriculumEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProfileEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {cascade: true, nullable: true})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: UserRole, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tickets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {lazy: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 180, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})@IsDateString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({update: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:20\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CurriculumEntity } from 'src/curriculum/entities/curriculum.entity';\nimport { TimestampEntity } from 'src/generics/timestamp.entity';\nimport { Column, Entity, JoinColumn, ManyToOne, OneToMany, OneToOne } from 'typeorm';\nimport { ProfileEntity } from '../../profile/entities/profile.entity';\nimport { IsDateString } from 'class-validator';\nimport { Exclude } from 'class-transformer';\nimport { TicketEntity } from 'src/ticket/entities/ticket.entity';\n\nexport enum UserRole {\n  ROOT = 'ROLE_SUPER_ADMIN',\n  ADMIN = 'ROLE_ADMIN',\n  MANAGER = 'ROLE_MANAGER',\n  ENGINEER = 'ROLE_ENGINEER',\n  CUSTOMER = 'ROLE_CUSTOMER',\n  USER = 'ROLE_USER',\n}\n\n@Entity('user')\nexport class UserEntity extends TimestampEntity {\n  @Column({ length: 180, unique: true })\n  username: string;\n\n  @Column({ length: 255, unique: true })\n  email: string;\n\n  @Exclude()\n  @Column()\n  password: string;\n\n  @Exclude()\n  @Column()\n  salt: string;\n\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.USER,\n  })\n  role: UserRole;\n\n  @Column({ nullable: true })\n  @IsDateString()\n  validated_at: Date;\n\n  //----------RELATION-------------//\n  @OneToOne(() => ProfileEntity, {\n    cascade: true,\n    nullable: true,\n  })\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @OneToMany(() => CurriculumEntity, (curriculum) => curriculum.user, {\n    nullable: true,\n  })\n  curriculums: CurriculumEntity[];\n\n  @OneToMany(() => TicketEntity, (ticket) => ticket.assignTo, {\n    lazy: true,\n    nullable: true,\n  })\n  tickets: Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './entities/user.entity';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\nimport * as dotenv from 'dotenv';\ndotenv.config();\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEntity\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllWithProfile\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                isAdminOrManager\n                            \n                            \n                                    Async\n                                isOwnerOrAdmin\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntity(userData: RegisterAuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllWithProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllWithProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsername(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isAdminOrManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAdminOrManager(user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isOwnerOrAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isOwnerOrAdmin(object: any, user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(data: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { QueryBuilder, Repository } from 'typeorm';\nimport { UserEntity, UserRole } from './entities/user.entity';\nimport { Injectable } from '@nestjs/common';\nimport { RegisterAuthDto } from 'src/auth/dto/register.auth.dto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async createEntity(userData: RegisterAuthDto): Promise {\n    return await this.userRepository.create({ ...userData });\n  }\n\n  async findByUsername(data: string): Promise {\n    return await this.userRepository.findOne({ username: data });\n  }\n\n  async save(data: UserEntity): Promise {\n    return await this.userRepository.save(data);\n  }\n\n  async update(data: UserEntity): Promise {\n    const user = await this.userRepository.preload(data);\n    return await this.userRepository.save(user);\n  }\n\n  async findAll(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async findOne(data: number): Promise {\n    return await this.userRepository.findOne(data, { relations: ['profile'] });\n  }\n\n  async findAllWithProfile(): Promise {\n    return await this.userRepository\n      .createQueryBuilder('user')\n      .leftJoinAndSelect('user.profile', 'profile')\n      .getMany();\n  }\n\n  async isOwnerOrAdmin(object: any, user: UserEntity): Promise {\n    return (\n      user.role === UserRole.ADMIN ||\n      (object.user && object.user.id === user.id)\n    );\n  }\n\n  async isAdminOrManager(user: UserEntity): Promise {\n    return user.role === UserRole.ADMIN || UserRole.MANAGER ? true : false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/auth/dto/login.credentials.dto.ts\n            \n            class\n            LoginCredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.auth.dto.ts\n            \n            class\n            RegisterAuthDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/interface/payload.interface.ts\n            \n            interface\n            PayloadInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/client/client.controller.ts\n            \n            controller\n            ClientController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/client/client.service.ts\n            \n            injectable\n            ClientService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/client/contact.controller.ts\n            \n            controller\n            ContactController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/client/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/client/dto/create-client.dto.ts\n            \n            class\n            CreateClientDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/client/dto/create-contact.dto.ts\n            \n            class\n            CreateContactDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/client/dto/update-client.dto.ts\n            \n            class\n            UpdateClientDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/client/dto/update-contact.dto.ts\n            \n            class\n            UpdateContactDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/client/entities/client.entity.ts\n            \n            class\n            ClientEntity\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/client/entities/contact.entity.ts\n            \n            class\n            ContactEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/curriculum/curriculum.controller.ts\n            \n            controller\n            CurriculumController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/curriculum/curriculum.service.ts\n            \n            injectable\n            CurriculumService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/curriculum/dto/Add-cv-dto.ts\n            \n            class\n            AddCvDTO\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/curriculum/dto/Update-cv-dto.ts\n            \n            class\n            UpdateCvDTO\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/curriculum/entities/curriculum.entity.ts\n            \n            class\n            CurriculumEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/curriculum/subscribers/curriculum.subscriber.ts\n            \n            class\n            CurriculumSubscriber\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generics/timestamp.entity.ts\n            \n            class\n            TimestampEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/helpers/cin-generator/cin-generator.service.ts\n            \n            injectable\n            CinGeneratorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/logger.middleware.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/middleware.ts\n            \n            injectable\n            FirstMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/profile/entities/profile.entity.ts\n            \n            class\n            ProfileEntity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/ticket/dto/create-ticket.dto.ts\n            \n            class\n            CreateTicketDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ticket/dto/update-ticket.dto.ts\n            \n            class\n            UpdateTicketDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ticket/entities/ticket.entity.ts\n            \n            class\n            TicketEntity\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/ticket/ticket.controller.ts\n            \n            controller\n            TicketController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/ticket/ticket.service.ts\n            \n            injectable\n            TicketService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.0\n        \n            @nestjs/typeorm : ^7.1.4\n        \n            @types/morgan : ^1.9.2\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            helmet : ^4.2.0\n        \n            morgan : ^1.10.0\n        \n            mysql : ^2.18.1\n        \n            nest-morgan : ^1.0.1\n        \n            nestjs-sse : ^1.0.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriorityTicketEnum   (src/.../ticket.entity.ts)\n                        \n                        \n                            StatusTicketEnum   (src/.../ticket.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ticket/entities/ticket.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        PriorityTicketEnum\n                    \n                \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : high\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : medium\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : low\n                            \n                        \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                Value : normal\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StatusTicketEnum\n                    \n                \n                        \n                            \n                                 NEW\n                            \n                        \n                        \n                            \n                                Value : new\n                            \n                        \n                        \n                            \n                                 WAITING\n                            \n                        \n                        \n                            \n                                Value : waiting\n                            \n                        \n                        \n                            \n                                 RESOLVED\n                            \n                        \n                        \n                            \n                                Value : resolved\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : rejected\n                            \n                        \n            \n        \n\n    src/user/entities/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ROOT\n                            \n                        \n                        \n                            \n                                Value : ROLE_SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ROLE_ADMIN\n                            \n                        \n                        \n                            \n                                 MANAGER\n                            \n                        \n                        \n                            \n                                Value : ROLE_MANAGER\n                            \n                        \n                        \n                            \n                                 ENGINEER\n                            \n                        \n                        \n                            \n                                Value : ROLE_ENGINEER\n                            \n                        \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : ROLE_CUSTOMER\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : ROLE_USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CurriculumModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TicketModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_CurriculumModule\n\n\n\ncluster_CurriculumModule_providers\n\n\n\ncluster_HelpersModule\n\n\n\ncluster_HelpersModule_exports\n\n\n\ncluster_HelpersModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nCurriculumModule\n\nCurriculumModule\n\nAppModule -->\n\nCurriculumModule->AppModule\n\n\n\n\n\nHelpersModule\n\nHelpersModule\n\nAppModule -->\n\nHelpersModule->AppModule\n\n\n\n\n\nCinGeneratorService \n\nCinGeneratorService \n\nCinGeneratorService  -->\n\nHelpersModule->CinGeneratorService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nClientModule -->\n\nUserModule->ClientModule\n\n\n\nCurriculumModule -->\n\nUserModule->CurriculumModule\n\n\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\nTicketModule -->\n\nUserModule->TicketModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\nContactService\n\nContactService\n\nClientModule -->\n\nContactService->ClientModule\n\n\n\n\n\nCurriculumService\n\nCurriculumService\n\nCurriculumModule -->\n\nCurriculumService->CurriculumModule\n\n\n\n\n\nCinGeneratorService\n\nCinGeneratorService\n\nHelpersModule -->\n\nCinGeneratorService->HelpersModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nTicketService\n\nTicketService\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/middleware/logger.middleware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (req: Request, res: Response, next) => {\n  console.log('ip:', req.ip);\n  next();\n}\n                        \n                    \n\n\n            \n        \n\n    src/decorators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n\n    return data ? user && user[data] : user;\n  },\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
